(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{533:function(t,e,a){"use strict";a.r(e);var s=a(62),v=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"flex-布局-上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flex-布局-上"}},[t._v("#")]),t._v(" Flex 布局（上）")]),t._v(" "),a("h2",{attrs:{id:"_1-前言-历史"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-前言-历史"}},[t._v("#")]),t._v(" 1. 前言/历史")]),t._v(" "),a("p",[t._v("网页布局（layout）是 CSS 的一个重点应用。布局最核心的问题是："),a("strong",[t._v("如何在一行中显示两个 block 元素？")])]),t._v(" "),a("p",[t._v("从历史发展的时间顺序来看，解决这个问题的方案有三种：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("使用 "),a("strong",[t._v("<table>")]),t._v(" 元素布局；")])]),t._v(" "),a("li",[a("p",[t._v("使用 "),a("strong",[t._v("position:static")]),t._v(" + "),a("strong",[t._v("float")]),t._v(" 布局；")])]),t._v(" "),a("li",[a("p",[t._v("使用 "),a("strong",[t._v("position:relative")]),t._v(" + "),a("strong",[t._v("position:absolute")]),t._v(" 布局。")])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/div_0.jpg",alt:""}})]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),a("p",[t._v("语义化是 HTML5 的一个重点，例如它提出 "),a("code",[t._v("<strong>")]),t._v(" 来替代 "),a("code",[t._v("<b>")]),t._v("。对于常用于布局的无语义的 "),a("code",[t._v("<div>")]),t._v(" 元素，HTML5 也提出了几个替代它的语义化元素。")])]),t._v(" "),a("p",[t._v("历史上，在经历了上述三种方案的发展之后，W3C 组织最终提出了一个统一的标准的解决方案："),a("strong",[t._v("Flex")]),t._v(" 布局。")]),t._v(" "),a("h2",{attrs:{id:"_2-flex-布局是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-flex-布局是什么"}},[t._v("#")]),t._v(" 2. Flex 布局是什么？")]),t._v(" "),a("p",[t._v("Flex 是 Flexible Box 的缩写，意为 “弹性布局” ，用来为盒状模型提供最大的灵活性。")]),t._v(" "),a("p",[t._v("任何一个容器都可以指定为 Flex 布局。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("行内元素也可以使用 Flex 布局。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inline-flex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("flex")]),t._v(" 和 "),a("strong",[t._v("inline-flex")]),t._v(" 的区别在于，上述例子中的 flex 类型的 .box 是独占一行，而 inline-flex 的 .box 不要求独占一行。")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("父元素设置为： "),a("code",[t._v("display: flex")]),t._v(" 以后，其子元素的 "),a("code",[t._v("float")]),t._v(" 、"),a("code",[t._v("clear")]),t._v(" 和 "),a("code",[t._v("vertical-align")]),t._v(" 属性将失效。")])]),t._v(" "),a("h2",{attrs:{id:"_3-基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-基本概念"}},[t._v("#")]),t._v(" 3. 基本概念")]),t._v(" "),a("p",[t._v("采用 flex 布局的元素，称为 flex 容器"),a("small",[t._v("（flex container）")]),t._v("，简称『容器』。它的所有子元素自动成为容器成员，称为 flex 项目"),a("small",[t._v("（flex item）")]),t._v("，简称『项目』。")]),t._v(" "),a("p",[t._v("一个 flex 容器中默认存在两根轴：主轴（main axis）和交叉轴（cross axis）。主轴和交叉轴成 90° 垂直交叉，"),a("small",[t._v("这也是为什么第二根轴被称为『交叉』轴的原因。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/flex-01.png",alt:"flex-01"}})]),t._v(" "),a("p",[t._v("默认情况下，主轴是水平的，方向是从左往右，那么交叉轴自然就是垂直的。毫无疑问，主轴是水平还是垂直，以及它的方向，都是 "),a("strong",[t._v("可以设置")]),t._v(" 的 。")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("主轴的相关属性会影响到交叉轴，但是反之，交叉轴影响不到主轴。")])]),t._v(" "),a("p",[t._v("无论水平还是垂直，主轴的开始位置"),a("small",[t._v("（与边框的交叉点）")]),t._v("被称作 "),a("strong",[t._v("主轴的起点")]),a("small",[t._v("（main start）")]),t._v("。与之对应的，结束的位置被称作 "),a("strong",[t._v("主轴的终点")]),a("small",[t._v("（main end）")]),t._v("。同样，交叉轴也有起点和终点的概念。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("主轴水平时：")]),t._v(" "),a("ul",[a("li",[t._v("如果方向是从左往右，那么，毫无疑问，主轴的起点在左边线，终点在右边线。")]),t._v(" "),a("li",[t._v("如果方向是从右往左，那么，毫无疑问，主轴的起点在右边线，终点在左边线。")]),t._v(" "),a("li",[t._v("主轴水平，那么交叉轴必然是垂直。此时，无论主轴是从左往右，还是从右往左，"),a("strong",[t._v("交叉轴的方向都是从上往下")]),t._v("。所以，交叉轴的起点在上边线，终点在下边线。")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/flex-02.png",alt:"flex-02"}})])])])]),t._v(" "),a("p",[t._v("主轴垂直时：")]),t._v(" "),a("ul",[a("li",[t._v("如果方向是从上往下，那么，毫无疑问，主轴的起点在上边线，终点在下边线。")]),t._v(" "),a("li",[t._v("如果方向是从下往上，那么，毫无疑问，主轴的起点在下边线，终点在上边线。")]),t._v(" "),a("li",[t._v("主轴垂直，那么交叉轴必然是水平。此时，无论主轴是从上往下，还是从下往上，"),a("strong",[t._v("交叉轴的方向都是从左往右")]),t._v("。那么，毫无疑问，交叉轴的起点在左边线，终点在右边线。")]),t._v(" "),a("li",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/flex-03.png",alt:"flex-03"}})])]),t._v(" "),a("p",[t._v("flex 容器的核心属性常见有以下 4 个：")]),t._v(" "),a("ul",[a("li",[t._v("flex-direction")]),t._v(" "),a("li",[t._v("flex-wrap")]),t._v(" "),a("li",[t._v("justify-content")]),t._v(" "),a("li",[t._v("align-items")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("这 4 个属性都是设置在容器元素"),a("small",[t._v("（即，父元素元素）")]),t._v("上的。")])]),t._v(" "),a("h2",{attrs:{id:"_4-核心属性-flex-direction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-核心属性-flex-direction"}},[t._v("#")]),t._v(" 4. 核心属性：flex-direction")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-direction")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" row | row-reverse | column | column-reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("默认值为 "),a("strong",[t._v("row")]),t._v(" 。")]),t._v(" "),a("p",[a("strong",[t._v("flex-direction")]),t._v(" 属性控制着主轴的水平/垂直，以及方向。")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("flex-direction: row")])]),t._v(" "),a("p",[t._v("主轴水平，方向是从左往右。主轴起点在左，终点在右。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/flex-04.png",alt:"flex-04"}})]),t._v(" "),a("p",[a("small",[t._v("此时，交叉轴自然就是垂直，方向是从上往下。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("flex-direction: row-reverse")])]),t._v(" "),a("p",[t._v("主轴水平，方向是从右往左。主轴起点在右，终点在左。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/flex-05.png",alt:"flex-05"}})]),t._v(" "),a("p",[a("small",[t._v("此时，交叉轴自然就是垂直，方向仍然是从上往下。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("flex-direction: column")])]),t._v(" "),a("p",[t._v("主轴垂直，方向是从上往下。主轴起点在上，终点在下。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/flex-06.png",alt:"flex-06"}})]),t._v(" "),a("p",[a("small",[t._v("此时，交叉轴自然就是水平，方向是从左往右。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("flex-direction: column-reverse")])]),t._v(" "),a("p",[t._v("主轴垂直，方向是从下往上。主轴起点在下，终点在上。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/flex-07.png",alt:"flex-07"}})]),t._v(" "),a("p",[a("small",[t._v("此时，交叉轴自然就是水平，方向仍然是从左往右。")])])])]),t._v(" "),a("h2",{attrs:{id:"_5-核心属性-flex-wrap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-核心属性-flex-wrap"}},[t._v("#")]),t._v(" 5. 核心属性：flex-wrap")]),t._v(" "),a("p",[t._v("默认情况下，flex 元素的子元素"),a("small",[t._v("（item）")]),t._v("都『串』在主轴上"),a("small",[t._v("（无论主轴是水平还是垂直）")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-wrap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nowrap | wrap | wrap-reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("flex-wrap")]),t._v(" 属性定义，如果一条轴线排不下，如何换行。")]),t._v(" "),a("p",[t._v("默认值为 "),a("code",[t._v("nowrap")]),t._v(" 。")]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("flex-wrap: nowrap")])]),t._v(" "),a("p",[a("em",[a("strong",[t._v("nowrap")])]),t._v(" 表示不换行，即，flex 元素的所有子元素，都要在同一行。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/flex-08.png",alt:"flex-08"}})])]),t._v(" "),a("li",[a("p",[a("code",[t._v("flex-wrap: wrap")])]),t._v(" "),a("p",[t._v("表示换行，换行的方向是沿交叉轴方向换行。形如：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/flex-09.png",alt:"flex-09"}})]),t._v(" "),a("ul",[a("li",[a("code",[t._v("flex-direction: row | row-reverse")]),t._v(" 时，由于交叉轴的方向是从上往下的。因此，换行时，第二行就在第一行的『下』面。")]),t._v(" "),a("li",[a("code",[t._v("flex-direction: column | column-reverse")]),t._v(" 时，由于交叉轴方向是从左往右。因此，换行时，第二行就在第一行的『右』边。")])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("flex-wrap: wrap-reverse")])]),t._v(" "),a("p",[t._v("表示逆向换行，换上的方向是『逆』交叉轴方向。形如：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/flex-10.png",alt:"flex-10"}})]),t._v(" "),a("p",[t._v("由于这里交叉轴的方向是从上往下，因此，逆向换行时，第二行就在第一行的『上』面。")])])]),t._v(" "),a("h2",{attrs:{id:"_6-二合一属性-flex-flow-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-二合一属性-flex-flow-属性"}},[t._v("#")]),t._v(" 6. 二合一属性：flex-flow 属性")]),t._v(" "),a("p",[t._v("flex-flow 属性不是『新』属性，它是 flex-direction + flex-wrap 属性的组合加简写形式。默认值为 "),a("code",[t._v("row nowrap")]),t._v(" 。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("flex-flow")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <flex-direction> || <flex-wrap>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_7-核心属性-justify-content"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-核心属性-justify-content"}},[t._v("#")]),t._v(" 7. 核心属性：justify-content")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("justify-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | space-between | space-around"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("justify-content")]),t._v(" 属性定义了项目在『主轴』上的对齐方式。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("#")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("flex-start")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("默认值，所有 item 整体都靠近主轴的起点位置")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("flex-end")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("所有 item 整体靠近主轴的终点位置")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("center")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("所有 item 整体居中，主轴的起点和终点有留白")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("space-between")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("起点-终点两端对齐，"),a("br"),t._v("子元素间均分空白，边线处无间距。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("space-around")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("和 space-between 类似。"),a("br"),t._v("不过起点-终点和边框间有间距。"),a("br"),t._v("这个间距等于 1/2 的子元素间的间距。")])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/flex-11.png",alt:"flex-11"}})]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("这里是以 "),a("code",[t._v("flex-direction: row")]),t._v(" 为样本进行的举例。当 "),a("code",[t._v("flex-direction")]),t._v(" 属性值为其它值时，相关概念是一样的。")])]),t._v(" "),a("h2",{attrs:{id:"_8-核心属性-align-items"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-核心属性-align-items"}},[t._v("#")]),t._v(" 8. 核心属性：align-items")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-items")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | baseline | stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("align-items")]),t._v(" 属性定义 flex 元素的子元素（item）在交叉轴上如何对齐。")]),t._v(" "),a("p",[t._v("它可能取 5 个值。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("#")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("flex-start")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("所有子元素都对齐交叉轴的起点。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("flex-end")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("所有子元素都对齐交叉轴的终点。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("center")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("所有子元素都对齐交叉轴中点。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("baseline")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("以所有子元素的第一行文字的基线对齐。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[a("code",[t._v("stretch")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("默认值。"),a("br"),t._v("如果子元素自身未设置高度或设为 auto，那么子元素将被拉伸，以便同时对齐交叉轴的起点和终点。")])])])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/flex-12.png",alt:"flex-12"}})]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("这里是以 "),a("code",[t._v("flex-direction: row")]),t._v(" 为样本进行的举例。当 "),a("code",[t._v("flex-direction")]),t._v(" 属性值为其它值时，相关概念是一样的。")])]),t._v(" "),a("h2",{attrs:{id:"_9-align-content-属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-align-content-属性"}},[t._v("#")]),t._v(" 9. align-content 属性")]),t._v(" "),a("p",[a("strong",[t._v("align-content")]),t._v(" 属性和 flex-wrap 属性有点关系。当 "),a("code",[t._v("flex-wrap: wrap")]),t._v(" 和 "),a("code",[t._v("flex-wrap:wrap-reverse")]),t._v(" 时，如果 Flex 元素的子元素"),a("small",[t._v("（item）")]),t._v("多到一行/一列放不下时，会出现折行的情况。这时，逻辑上就相当于有了多根平行的主轴。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/flex-09.png",alt:"flex-09"}})]),t._v(" "),a("p",[a("strong",[t._v("align-content")]),t._v(" 属性就是用来设置这多根平行的主轴在交叉轴方向上的对齐方式。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("align-content")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" flex-start | flex-end | center | space-between | space-around | stretch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("如果项目只有一根轴线，该属性不起作用。")])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("align-content: flex-start")])]),t._v(" "),a("p",[t._v("多根轴线整体靠近主轴的起点：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/align-content-flex-start.png",alt:"align-content-flex-start.png"}})]),t._v(" "),a("p",[t._v("如上例，三根主轴轴线紧靠在一起，整体对齐交叉轴的起点位置。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("align-content: flex-end")])]),t._v(" "),a("p",[t._v("多根轴线整体靠近主轴的终点：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/align-content-flex-end.png",alt:"align-content-flex-end.png"}})]),t._v(" "),a("p",[t._v("如上例，三根主轴轴线紧靠在一起，整体对齐交叉轴的终点位置。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("align-content: flex-center")])]),t._v(" "),a("p",[t._v("多根轴线整体在主轴上居中：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/align-content-center.png",alt:"align-content-center.png"}})]),t._v(" "),a("p",[t._v("如上例，三根主轴轴线紧靠在一起，在交叉轴方上居中，即交叉轴的起点和终点位置时留白。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("align-content: space-between")])]),t._v(" "),a("p",[t._v("多根轴线之间有间距，且最两端的轴线紧挨边线。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/align-content-between.png",alt:"align-content-between.png"}})]),t._v(" "),a("p",[t._v("如上例，三根主轴轴线之间有等宽的间隔，同时，第一根轴对齐交叉轴的起点，最后一根轴对齐交叉轴的终点。")]),t._v(" "),a("p",[t._v("上面这个图例优点小瑕疵，『对齐』表现得不明显。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("align-content: space-around")])]),t._v(" "),a("p",[t._v("多根轴线之间有间距，但最两端的轴线和边线有间距。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/align-content-around.png",alt:"align-content-around.png"}})]),t._v(" "),a("p",[t._v("如上例，三根主轴轴线之间有等宽的间隔，同时，第一根轴和交叉轴的起点有间隔，最后一根轴和交叉轴的终点有间隔，这个『间隔』等于轴与轴之间的间距的 1/2 。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("align-content: stretch")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/css/img/align-content-stretch.png",alt:"align-content-stretch.png"}})]),t._v(" "),a("p",[t._v("这是默认值。每根主轴上的元素（item）会被拉伸，逻辑上，各个主轴一起均分交叉轴方向上的空间。前提是主轴上的元素没有指定明确的长度，或者为 auto 。")]),t._v(" "),a("p",[t._v("不过，各个主轴之间也有间隙，整体呈 "),a("code",[t._v("主轴-间隙-主轴-间隙-...")]),t._v(" 的形式。因此，第一根主轴是对齐交叉轴起点位置，而最后一根轴和交叉轴终点位置之间有间隙。")])])])])}),[],!1,null,null,null);e.default=v.exports}}]);