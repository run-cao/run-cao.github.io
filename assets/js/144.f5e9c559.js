(window.webpackJsonp=window.webpackJsonp||[]).push([[144],{629:function(s,a,t){"use strict";t.r(a);var n=t(62),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"信号量-semaphore"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#信号量-semaphore"}},[s._v("#")]),s._v(" 信号量（Semaphore）")]),s._v(" "),t("p",[s._v("Java 通过 Semaphore 类实现了经典的信号量。信号量通过计数器来控制对共享资源的访问。")]),s._v(" "),t("ul",[t("li",[s._v("如果计数器大于 0， 则允许访问；")]),s._v(" "),t("li",[s._v("如果计数器为 0，则不允许访问。")])]),s._v(" "),t("p",[s._v("计数器的计数逻辑上代表着当前共享资源的许可证的数量。")]),s._v(" "),t("p",[s._v("Semaphore 类具有如下所示的两个构造函数：")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Semaphore")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" num"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Semaphore")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" num"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("boolean")]),s._v(" how"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("p",[s._v("其中，"),t("code",[s._v("num")]),s._v(" 指定了初始的许可证计数大小。因此，num 指定了任意时刻可以访问共享资源的线程数量。如果，num 是 1，那么任意时刻只有一个线程能够访问资源。")]),s._v(" "),t("p",[s._v("默认情况下，等待获取许可证的线程以随机的方式 “抢夺” 许可证。通过将 "),t("code",[s._v("how")]),s._v(" 设置为 true ，可以确保等待的线程以前后顺序获得许可证。"),t("small",[s._v("即，是否是公平锁。")])]),s._v(" "),t("p",[s._v("为了得到许可证，可以调用 "),t("strong",[s._v("Semaphore#acquire")]),s._v(" 方法，该方法具有以下 2 种形式：")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获得 1 个许可证")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("acquire")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获得 num 个许可证")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("acquire")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" num"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("InterruptedException")]),s._v("\n")])])]),t("p",[s._v("如果调用时无法获得许可证，就会挂起线程"),t("small",[s._v("（阻塞）")]),s._v("，直到许可证可以获得为止。")]),s._v(" "),t("p",[s._v("为了释放许可证，可以调用 "),t("strong",[s._v("Semaphore#release")]),s._v(" 方法，该方法具有以下 2 种形式：")]),s._v(" "),t("div",{staticClass:"language-java extra-class"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 释放 1 个许可证")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("release")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 释放 num 个许可证")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("relase")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" num"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),t("p",[s._v("为了使用信号量控制对资源的访问，在访问资源之前，希望使用资源的每个线程必须先调用 "),t("strong",[s._v("acquire")]),s._v(" 方法；当线程使用完资源时，必须调用 "),t("strong",[s._v("release")]),s._v(" 方法。")])])])}),[],!1,null,null,null);a.default=e.exports}}]);