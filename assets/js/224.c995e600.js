(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{690:function(n,t,s){"use strict";s.r(t);var e=s(62),a=Object(e.a)({},(function(){var n=this,t=n.$createElement,s=n._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token shebang important"}},[n._v("#!/bin/bash")]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[n._v("IP")]),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("192.172")]),n._v(".0.16\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ----------------------------------------------------------------------")]),n._v("\nsystemctl stop firewalld\nsystemctl disable firewalld --now\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ----------------------------------------------------------------------")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("sed")]),n._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v("'s|^mirrorlist=|#mirrorlist=|g'")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n         -e "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v("'s|^#baseurl=http://mirror.centos.org|baseurl=https://mirrors.tuna.tsinghua.edu.cn|g'")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n         -i.bak "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n         /etc/yum.repos.d/CentOS-*.repo\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("cd")]),n._v(" /etc/yum.repos.d "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("&&")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("mkdir")]),n._v(" bak\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("mv")]),n._v(" *.repo.bak bak\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("tar")]),n._v(" czvf bak.tar.gz bak\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("rm")]),n._v(" -rf bak\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("cd")]),n._v(" ~\n\nyum makecache\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ----------------------------------------------------------------------")]),n._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("install")]),n._v(" -y "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("vim")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("wget")]),n._v(" chrony lrzsz gcc "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("lsof")]),n._v(" net-tools\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ----------------------------------------------------------------------")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("cat")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">>")]),n._v(" ~/.bashrc "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v("EOF\n\n# added by root\nalias vi='vim'\nalias dockerps='docker ps --format \"table {{.Image}}"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[n._v("\\t")]),n._v("{{.Names}}"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[n._v("\\t")]),n._v("{{.Status}}"),s("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[n._v("\\t")]),n._v("{{.Ports}}\"'\nexport PS1='[\\u@\\H \\W]\\$ '\nEOF")]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("source")]),n._v(" ~/.bashrc\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ----------------------------------------------------------------------")]),n._v("\nsystemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("enable")]),n._v(" chronyd --now\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("rm")]),n._v(" /etc/localtime\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("ln")]),n._v(" -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\ntimedatectl\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ----------------------------------------------------------------------")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("sed")]),n._v(" -i "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n    -e "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('"s|BOOTPROTO=dhcp|BOOTPROTO=static|"')]),n._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n    -e "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('"s|ONBOOT=no|ONBOOT=yes|"')]),n._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n    /etc/sysconfig/network-scripts/ifcfg-ens192 \n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("cat")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">>")]),n._v(" /etc/sysconfig/network-scripts/ifcfg-ens192 "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v("EOF\n\nIPADDR="),s("span",{pre:!0,attrs:{class:"token variable"}},[n._v("$IP")]),n._v("\nNETMASK=255.255.255.0\nGATEWAY=192.172.0.1\nDNS1=8.8.8.8\nPREFIX=24\nEOF")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ----------------------------------------------------------------------")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("echo")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('"nmcli g hostname '),s("span",{pre:!0,attrs:{class:"token variable"}},[n._v("${IP}")]),n._v('"')]),n._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">>")]),n._v(" /etc/rc.d/rc.local\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("chmod")]),n._v(" a+x /etc/rc.d/rc.local\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ----------------------------------------------------------------------")]),n._v("\nyum remove docker "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n      docker-client "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n      docker-client-latest "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n      docker-common "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n      docker-latest "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n      docker-latest-logrotate "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n      docker-logrotate "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n      docker-engine\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("install")]),n._v(" -y "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n      yum-utils "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n      device-mapper-persistent-data "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n      lvm2\nyum-config-manager "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n      --add-repo  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n      https://download.docker.com/linux/centos/docker-ce.repo\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("sudo")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("sed")]),n._v(" -i "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v("'s|download.docker.com|repo.huaweicloud.com/docker-ce|'")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("\\")]),n._v("\n    /etc/yum.repos.d/docker-ce.repo\nyum makecache fast\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("install")]),n._v(" -y docker-ce\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("cat")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">>")]),n._v(" /etc/docker/daemon.json "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('EOF\n{\n  "registry-mirrors": [\n    "https://registry.docker-cn.com",\n    "https://docker.mirrors.ustc.edu.cn"\n  ]\n}\nEOF')]),n._v("\nsystemctl "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("enable")]),n._v(" docker --now\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ----------------------------------------------------------------------")]),n._v("\nyum "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("install")]),n._v(" -y java-1.8.0-openjdk java-1.8.0-openjdk-devel maven "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("git")]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("cat")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">>")]),n._v(" /etc/profile "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v("EOF\n\nexport JAVA_HOME=/etc/alternatives/java_sdk \nexport PATH=\\"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[n._v("$PATH")]),n._v(":"),s("span",{pre:!0,attrs:{class:"token variable"}},[n._v("$JAVA_HOME")]),n._v("/bin \nexport CLASSPATH=.:"),s("span",{pre:!0,attrs:{class:"token variable"}},[n._v("$JAVA_HOME")]),n._v("/lib/dt.jar:"),s("span",{pre:!0,attrs:{class:"token variable"}},[n._v("$JAVA_HOME")]),n._v("/lib/tools.jar \nEOF")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ----------------------------------------------------------------------")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("mkdir")]),n._v(" ~/.m2\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("cat")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">>")]),n._v(" ~/.m2/settings.xml "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('EOF\n<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0\n    http://maven.apache.org/xsd/settings-1.0.0.xsd">\n\n    <mirrors>\n        <mirror>\n            <id>nexus-aliyun</id>\n            <name>Nexus aliyun</name>\n            <mirrorOf>central</mirrorOf>\n            <url>https://maven.aliyun.com/repository/public</url>\n        </mirror>\n    </mirrors>\n\n</settings>\nEOF')]),n._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("cat")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">>")]),n._v(" ~/.m2/cleanLastUpdated.sh "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v("EOF\n#!/bin/bash\n# 这里写你的仓库路径\nREPOSITORY_PATH=~/.m2/repository\necho 正在搜索...\nfind "),s("span",{pre:!0,attrs:{class:"token variable"}},[n._v("$REPOSITORY_PATH")]),n._v(' -name "*lastUpdated*" | xargs rm -fr\necho 搜索完\nEOF')]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("chmod")]),n._v(" a+x ~/.m2/cleanLastUpdated.sh\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ----------------------------------------------------------------------")]),n._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("mkdir")]),n._v(" /tmp/maven-temp "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("&&")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("cd")]),n._v(" /tmp/maven-temp\n"),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("cat")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v(">>")]),n._v(" ./pom.xml "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("<<")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[n._v('EOF\n<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.example</groupId>\n    <artifactId>demo</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <name>demo</name>\n    <description>Demo project for Spring Boot</description>\n\n    <properties>\n        <java.version>1.8</java.version>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <spring-boot.version>2.3.7.RELEASE</spring-boot.version>\n        <spring-cloud.version>Hoxton.SR9</spring-cloud.version>\n        <spring-cloud-alibaba.version>2.2.2.RELEASE</spring-cloud-alibaba.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-amqp</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-data-redis</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-security</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.alibaba.cloud</groupId>\n            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.alibaba.cloud</groupId>\n            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.alibaba.cloud</groupId>\n            <artifactId>spring-cloud-starter-alibaba-sentinel</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.baomidou</groupId>\n            <artifactId>mybatis-plus-boot-starter</artifactId>\n            <version>3.4.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.mybatis.spring.boot</groupId>\n            <artifactId>mybatis-spring-boot-starter</artifactId>\n            <version>2.1.4</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-gateway</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.cloud</groupId>\n            <artifactId>spring-cloud-starter-openfeign</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <scope>runtime</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n            <exclusions>\n                <exclusion>\n                    <groupId>org.junit.vintage</groupId>\n                    <artifactId>junit-vintage-engine</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.amqp</groupId>\n            <artifactId>spring-rabbit-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.security</groupId>\n            <artifactId>spring-security-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.springframework.cloud</groupId>\n                <artifactId>spring-cloud-dependencies</artifactId>\n                <version>Hoxton.SR9</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-dependencies</artifactId>\n                <version>2.3.7.RELEASE</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.alibaba.cloud</groupId>\n                <artifactId>spring-cloud-alibaba-dependencies</artifactId>\n                <version>2.2.2.RELEASE</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.8.1</version>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                    <encoding>UTF-8</encoding>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <version>2.3.7.RELEASE</version>\n                <configuration>\n                    <mainClass>com.example.demo.DemoApplication</mainClass>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>repackage</id>\n                        <goals>\n                            <goal>repackage</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n</project>\nEOF')]),n._v("\n\nmvn "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("test")]),n._v(" package clean \n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[n._v("cd")]),n._v(" ~ "),s("span",{pre:!0,attrs:{class:"token operator"}},[n._v("&&")]),n._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[n._v("rm")]),n._v(" -rf /tmp/maven-temp/\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# ----------------------------------------------------------------------")]),n._v("\ninit "),s("span",{pre:!0,attrs:{class:"token number"}},[n._v("6")]),n._v("\n")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);