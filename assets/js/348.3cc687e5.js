(window.webpackJsonp=window.webpackJsonp||[]).push([[348],{819:function(t,a,i){"use strict";i.r(a);var o=i(62),_=Object(o.a)({},(function(){var t=this,a=t.$createElement,i=t._self._c||a;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"推荐一款超强接口管理神器-apifox"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#推荐一款超强接口管理神器-apifox"}},[t._v("#")]),t._v(" 推荐一款超强接口管理神器 Apifox")]),t._v(" "),i("p",[t._v("『未完待续』")]),t._v(" "),i("p",[t._v("简单来说，Apifox 它是集：接口文档管理、接口调试、Mock、接口自动化测试于一体的全流程集成工具，覆盖从开发->测试->管理等环节，等同于 Postman + Swagger + Mock + JMeter 几款工具功能累加。")]),t._v(" "),i("p",[t._v("利用 Apifox 可以实现：")]),t._v(" "),i("ul",[i("li",[i("p",[t._v("通过 Apifox 可实现一套系统、一份数据，解决多个系统之间的数据同步问题。")])]),t._v(" "),i("li",[i("p",[t._v("只要定义好接口文档，接口调试、数据 Mock、接口测试就可以直接使用，无需再次定义；")])]),t._v(" "),i("li",[i("p",[t._v("接口文档和接口开发调试使用同一个工具，接口调试完成后即可保证和接口文档定义完全一致。")])])]),t._v(" "),i("h2",{attrs:{id:"_1-从接口管理现状聊起"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-从接口管理现状聊起"}},[t._v("#")]),t._v(" 1. 从接口管理现状聊起")]),t._v(" "),i("p",[t._v("在提及 Apifox 之前，需要先从接口管理现状聊起，对于接口管理的现状来说，目前行业大部分采取的解决方案有如下几种：")]),t._v(" "),i("ul",[i("li",[t._v("使用 Swagger 管理接口文档。")]),t._v(" "),i("li",[t._v("使用 Postman 调试接口。")]),t._v(" "),i("li",[t._v("使用 Easy Mock 来进行 Mock 数据。")]),t._v(" "),i("li",[t._v("使用 JMeter 做接口自动化测试。")])]),t._v(" "),i("p",[t._v("维护不同工具之间数据一致性非常困难、低效。并且这里不仅仅是工作量的问题，更大的问题是多个系统之间数据不一致，导致协作低效、频繁出问题，开发测试人员痛苦不堪。")]),t._v(" "),i("ol",[i("li",[t._v("开发人员在 Swagger 定义好文档后，接口调试的时候还需要去 Postman 再定义一遍。")]),t._v(" "),i("li",[t._v("前端开发 Mock 数据的时候又要去 Easy Mock 定义一遍，还需要手动设置 Mock 规则。")]),t._v(" "),i("li",[t._v("测试人员需要去 JMeter 再定义一遍。")]),t._v(" "),i("li",[t._v("前端根据 Easy Mock 出来的数据开发完，后端根据 Swagger 定义的接口文档开发完，各都试测试通过了，本以为可以马上上线，结果一对接发现各种问题：")]),t._v(" "),i("li",[t._v("开发过程中接口变更了，只修改了 Swagger，但是没有及时同步修改 RAP。")]),t._v(" "),i("li",[t._v("后端开发的接口数据类型和文档不一致，肉眼难以发现问题。")]),t._v(" "),i("li",[t._v("同样，测试在 JMeter 写好的测试用例，真正运行的时候也会发现各种不一致。")]),t._v(" "),i("li",[t._v("时间久了，各种不一致会越来越严重。")])]),t._v(" "),i("p",[t._v("在前面提到了 Apifox = Postman + Swagger + Mock + JMeter 它是通过一套系统、一份数据，解决多个系统之间的数据同步问题。只要定义好接口文档，接口调试、数据 Mock、接口测试就可以直接使用，无需再次定义；接口文档和接口开发调试使用同一个工具，接口调试完成后即可保证和接口文档定义完全一致。高效、及时、准确！")]),t._v(" "),i("h2",{attrs:{id:"_2-apifox-介绍"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_2-apifox-介绍"}},[t._v("#")]),t._v(" 2. Apifox 介绍")]),t._v(" "),i("p",[t._v("官方对 Apifox 定位是，Apifox = Postman + Swagger + Mock + JMeter，如下图所示")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/restful/img/apifox-01.png",alt:"apifox-01.png"}})]),t._v(" "),i("p",[t._v("Apifox 目标是通过一套系统、一份数据，解决多个系统之间的数据同步问题。只要定义好接口文档，接口调试、数据 Mock、接口测试就可以直接使用，无需再次定义；接口文档和接口开发调试使用同一个工具，接口调试完成后即可保证和接口文档定义完全一致。高效、及时、准确！")]),t._v(" "),i("p",[t._v("官方地址："),i("a",{attrs:{href:"https://www.apifox.cn/#",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.apifox.cn/#"),i("OutboundLink")],1)]),t._v(" "),i("p",[t._v("概括来讲，Apifox 常用功能分为四类：")]),t._v(" "),i("ol",[i("li",[t._v("接口文档定义功能：Apifox 遵循 OpenApi 3.0 (原Swagger)、JSON Schema 规范的同时，提供了非常好用的可视化文档管理功能，零学习成本，非常高效。")]),t._v(" "),i("li",[t._v("接口调试功能：Postman 有的功能，比如环境变量、预执行脚本、后执行脚本、Cookie/Session 全局共享 等功能，Apifox 都有，并且和 Postman 一样高效好用。")]),t._v(" "),i("li",[t._v("数据 Mock功能：内置 Mock.js 规则引擎，非常方便 mock 出各种数据，并且可以在定义数据结构的同时写好 mock 规则。支持添加“期望”，根据请求参数返回不同 mock 数据。最重要的是 Apifox 零配置 即可 Mock 出非常人性化的数据，具体在本文后面介绍。")]),t._v(" "),i("li",[t._v("接口自动化测试：提供接口集合测试，可以通过选择接口（或接口用例）快速创建测试集。目前接口自动化测试更多功能还在开发中！目标是：JMeter 有的功能基本都会有，并且要更好用。")])]),t._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/restful/img/apifox-02.png",alt:"apifox-02.png"}})]),t._v(" "),i("h2",{attrs:{id:"_4-apifox-小试牛刀"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-apifox-小试牛刀"}},[t._v("#")]),t._v(" 4. Apifox 小试牛刀")]),t._v(" "),i("p",[t._v("接下来，带着大家，简单体验一下Apifor的使用。")]),t._v(" "),i("ol",[i("li",[t._v("先在官网下载对应系统安装包，进行安装，安装完成后，第一次启动需要先登录。")])]),t._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/restful/img/apifox-03.png",alt:"apifox-03.png"}})]),t._v(" "),i("p",[t._v("Ps:  登录前，需要先通过邮箱来注册一个帐号。")]),t._v(" "),i("ol",{attrs:{start:"2"}},[i("li",[t._v("登录成功后，Apifox 默认给了一些例子，单纯看它的界面会发现和 Postman 界面比较相似。")])]),t._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/restful/img/apifox-04.png",alt:"apifox-04.png"}})]),t._v(" "),i("p",[t._v("Ps: 当然也不要被它的外表所欺骗，功能还是有别于Postman的。")]),t._v(" "),i("ol",{attrs:{start:"3"}},[i("li",[t._v("在本地启一个 API 服务，端口为 8000 , 在 Apifox 上，新建一个新的测试环境，如下所示：")])]),t._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/restful/img/apifox-05.png",alt:"apifox-05.png"}})]),t._v(" "),i("ol",{attrs:{start:"4"}},[i("li",[t._v("新建一个测试分类，例如如：接口测试。也可直接在默认分类上，新建一条接口用例，如下所示：")])]),t._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/restful/img/apifox-06.png",alt:"apifox-06.png"}})]),t._v(" "),i("p",[t._v("如上图，添加对应的基础信息、配置请求参数等。")]),t._v(" "),i("ol",{attrs:{start:"5"}},[i("li",[t._v("选择测试环境，点击发送按钮，运行接口测试用例。")])]),t._v(" "),i("p",[t._v("看到这里，可能有些读者觉得和 Postman 功能基本是一样的，不妨接着往下看。")])])}),[],!1,null,null,null);a.default=_.exports}}]);