(window.webpackJsonp=window.webpackJsonp||[]).push([[343],{810:function(t,s,a){"use strict";a.r(s);var n=a(62),p=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"布隆过滤器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布隆过滤器"}},[t._v("#")]),t._v(" 布隆过滤器")]),t._v(" "),a("p",[t._v("传统 Java 应用系统一般采用 JDK 自身提供的 HashSet 进行去重，即主要是通过调用 "),a("code",[t._v("contains()")]),t._v(" 方法，判断当前元素是否存在于集合 Set 中。如果方法调用返回的结果为 true ，则代表元素已存在于改集合中；如果返回 false ，则代表元素不存在，并将该元素加进集合中。")]),t._v(" "),a("p",[t._v("此种方式要求在调用 "),a("code",[t._v("contains()")]),t._v(" 方法之前，将数据列表加载至内存中，即 HashSet 的 "),a("code",[t._v("contains()")]),t._v(" 方法是基于内存存储实现判断功能，因此在高并发大数量的场景中，此种方式则显得捉襟见肘。")]),t._v(" "),a("p",[t._v("布隆过滤器的作用和 JDK 自身提供的 HashSet 作用有异曲同工之妙，只不过它不需要在 “判重” 之前将数据列表加载至内存中。")]),t._v(" "),a("p",[t._v("Redisson 的 “布隆过滤器” 需要将当前的元素经过事先设计构建好的 K 个哈希函数计算出 K 个哈希值，并将预先已经构建好的 “位数组” 的相关下标取值置为 1 。当某个元素需要判断是否已存在时，则同样是先经过 K 个哈希函数求取 K 个哈希值，并判断 “位数组” 相应的 K 个下标的取值是否都为 1 。如果是，则代表元素是 “大概率” 是存在的；否则，表示该元素一定不存在。")]),t._v(" "),a("p",[t._v("布隆过滤器的去重核心算法执行步骤如下：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("设计并构建 K 个哈希函数，每个函数可以把元素散列成一个整数，即每个元素经过函数的计算求值，将得到一个整数值。")])]),t._v(" "),a("li",[a("p",[t._v("初始化一个长度为 N 的比特数组"),a("small",[t._v("（即，位数组）")]),t._v("，将每个比特位初始化为 0 。")])]),t._v(" "),a("li",[a("p",[t._v("当某个元素要加入集合时，需要先用 K 个哈希函数计算出 K 个散列值，并把数组中对应下标的元素赋值为 1 。")])]),t._v(" "),a("li",[a("p",[t._v("在判断某个元素是否在数组中时，先用 K 个哈希函数计算出 K 个哈希值，并查看数组中对应下标的取值，如果所有的数组下标对应的元素取值都为 1 ，则可以认为该元素 “大概率” 是存在于该集合中。如果数组中任意一个元素的取值都不为 1 ，则可以确定该元素一定不存在于该集合中。")])])]),t._v(" "),a("p",[t._v("之所以说是 “大概率” 地存在，是因为 bit array 中元素被赋值为 1 时，很可能是在不同元素通过 K 个哈希函数计算出 K 个哈希值时，刚好有下标是重复所致，导致了误判现象。例如：")]),t._v(" "),a("p",[t._v("因为 X 数据在集合中，因此，你将 a、b、c 三个位置为 1；因为 Y 数据在集合中，因此，你又将 b、c、d 三个位的置为 1 ，此时，你问 Z 数据是否在集合中，本来 Z 数据不在集合中，但是你通过哈希函数计算出它的哈希值分别为 a、c、d，然后你去查看 bit-array ，发现 bit-array 的 a、c、d 三个位都为 1 ，那么你会误以为 Z 也在集合中。这就发生了误判。")]),t._v(" "),a("p",[t._v("对于布隆过滤器而言，其优点与缺点是并存的。优点在于它消耗的内存空间比原始的 bit-array 更小，更省空间；缺点在于： 1. 有误判率；2. 不能删除。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myBloomFilterDataV2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Long")]),t._v(" total "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RBloomFilter")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" bloomFilter "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" redissonClient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBloomFilter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbloomFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("tryInit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.01")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    bloomFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"该布隆过滤器是否包含数据 1：{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bloomFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"该布隆过滤器是否包含数据 -1：{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bloomFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"该布隆过滤器是否包含数据 10000：{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bloomFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"该布隆过滤器是否包含数据 100000000：{}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bloomFilter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("contains")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100000000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=p.exports}}]);