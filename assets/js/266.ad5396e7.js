(window.webpackJsonp=window.webpackJsonp||[]).push([[266],{737:function(n,o,t){"use strict";t.r(o);var r=t(62),s=Object(r.a)({},(function(){var n=this,o=n.$createElement,t=n._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"配置中心-spring-cloud-config"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置中心-spring-cloud-config"}},[n._v("#")]),n._v(" 配置中心：Spring Cloud Config")]),n._v(" "),t("p",[n._v("在实际使用场景中，集群中会存在多个微服务，而每个服务又有可能存在多个实例。如果每一个微服务都是靠自己的 "),t("strong",[n._v("application.properties")]),n._v(" 或 "),t("strong",[n._v("application.yml")]),n._v(" 进行配置，那么整个项目的配置就会繁琐为混乱。例如：")]),n._v(" "),t("p",[n._v("多个 Service Producer 使用的是用一个数据库。理论上，可以在各个项目中配置数据库连接相关配置。但是，如果一旦有变动，如数据库所在主机的 IP 变动了，那么你需要改很多处地方，而且还必须确保无一遗漏。")]),n._v(" "),t("p",[n._v("因此 Spring Cloud 体系中出现了『"),t("strong",[n._v("配置中心")]),n._v("』："),t("strong",[n._v("spring-cloud-config")]),n._v(" 组件。")]),n._v(" "),t("p",[n._v("不过现在的趋势是将配置中心的功能和注册中心的功能合二为一，无论是 Consul 还是 Nacos 都是提供了配置中心的功能，因此，Spring Cloud Config 基本上也就销声匿迹了。")])])}),[],!1,null,null,null);o.default=s.exports}}]);