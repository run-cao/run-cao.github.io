(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{557:function(t,s,a){"use strict";a.r(s);var n=a(62),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"浏览器中的事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器中的事件循环"}},[t._v("#")]),t._v(" 浏览器中的事件循环")]),t._v(" "),a("h2",{attrs:{id:"_1-浏览器进程和线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-浏览器进程和线程"}},[t._v("#")]),t._v(" 1. 浏览器进程和线程")]),t._v(" "),a("p",[t._v("浏览器是多进程的，每当你打开一个 Tab ，都会有一个进程被系统创建出来。"),a("small",[t._v("这就是为什么你会在任务管理器中看见多个 chrome.exe 的原因。")])]),t._v(" "),a("p",[t._v("每一个 tab 都是一个浏览器『"),a("strong",[t._v("渲染进程")]),t._v("』。"),a("small",[t._v("当然，除了一个（或多个）渲染进程，浏览器还有其它的进程，例如 GPU 进程等。")])]),t._v(" "),a("p",[t._v("渲染进程是浏览器最核心最重要的进程，而渲染进程下又有多个线程，其中与 JS 关系最大的就是 “"),a("strong",[t._v("JS 引擎线程")]),t._v("” 。")]),t._v(" "),a("p",[t._v("我们常说的 “浏览器中的 JS 是单线程执行的” 指的就是浏览器"),a("small",[t._v("（的一个 Tab 中）")]),t._v("有且仅有一个线程执行你所编写的 JS 代码。")]),t._v(" "),a("div",{staticClass:"language-txt extra-class"},[a("pre",{pre:!0,attrs:{class:"language-txt"}},[a("code",[t._v("浏览器\n│── 其它进程\n├── ...\n├── \n├── 渲染进程 1\n├── 渲染进程 2\n├── ...\n└── 渲染进程 N\n    ├── JS 引擎线程\n    ├── HTTP 请求线程\n    ├── 定时触发线程\n    ├── 事件触发线程\n    └── GUI 线程\n")])])]),a("h2",{attrs:{id:"_2-事件循环和执行栈"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-事件循环和执行栈"}},[t._v("#")]),t._v(" 2. 事件循环和执行栈")]),t._v(" "),a("p",[t._v("JS 引擎线程在解析一段 JS 代码时，会将代码放在某个地方，这个地方就被称作『"),a("strong",[t._v("执行栈")]),t._v("』，然后依次执行里面的函数"),a("small",[t._v("（代码）")]),t._v("。")]),t._v(" "),a("p",[t._v("当在依次执行这些代码过程中，如果遇到了异步代码"),a("small",[t._v("（例如，发起 ajax 请求、设置定时任务等）")]),t._v("时，JS 引擎线程就会将这些代码交给其它线程执行"),a("small",[t._v("（而不是亲自、立刻执行它们）")]),t._v("。当 JS 引擎线程把异步任务代码交给别人执行之后，执行栈中的执行流程就继续向下执行"),a("small",[t._v("（而不是在异步任务代码处干耗）")]),t._v("。")]),t._v(" "),a("p",[t._v("当执行栈中的同步代码执行完之后"),a("small",[t._v("（异步代码都交出去了）")]),t._v("，JS 引擎线程会从 “一个队列” 中去取出已完成的异步任务的回调，将这个"),a("small",[t._v("（这些）")]),t._v("回调函数放到执行栈中继续执行。如果回调中又有异步代码，这些异步代码还是会被 JS 引擎线程 “交出去” 。")]),t._v(" "),a("p",[t._v("例如前面例子中：")]),t._v(" "),a("ul",[a("li",[t._v("“发起 ajax 请求” 代码会被交给 HTTP 请求线程执行；")]),t._v(" "),a("li",[t._v("“设置定时任务” 代码会被交给定时触发线程执行。")])]),t._v(" "),a("p",[a("strong",[t._v("这些异步任务代码，都不是由 JS 引擎线程执行的。")])]),t._v(" "),a("p",[t._v("被交给 “其它线程” 执行的异步任务在被 “其它线程” 执行完成后，它们"),a("small",[t._v("（异步任务）")]),t._v("的回调函数会被放入『"),a("strong",[t._v("任务队列")]),a("small",[t._v("（即，上面所说的 “一个队列”）")]),t._v("』，而 JS 引擎线程在执行完同步代码之后，会从 “任务队列” 中取出这些已完成的异步任务的回调继续执行。")]),t._v(" "),a("p",[t._v("上述工作，JS 引擎线程是『周期性、循环』执行的！这个周期性的循环也被称作事件循环，每一次循环其实就是一个时间周期，也被称之为一次 tick 。")]),t._v(" "),a("h2",{attrs:{id:"_3-宏任务和微任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-宏任务和微任务"}},[t._v("#")]),t._v(" 3. 宏任务和微任务")]),t._v(" "),a("p",[t._v("上面所说的 “任务队列” 不止一个。根据任务种类的不同可以分为 “微任务队列” 和 “宏任务队列” 。")]),t._v(" "),a("p",[t._v("在事件循环的过程中，执行栈在同步代码执行完成之后，优先会去检查 “微任务栈” 中是否有任务"),a("small",[t._v("（代码）")]),t._v("需要执行，如果没有，再去 “宏任务队列” 中查看有没有需要执行的任务。如此往复。")]),t._v(" "),a("p",[t._v("微任务会比宏任务先执行，并且微任务只有一个队列。宏任务队列可能会有多个。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("前面举例的 ajax 请求任务和定时器任务都是宏任务，另外，鼠标点击、键盘按下等事件也属于宏任务。")])]),t._v(" "),a("li",[a("p",[t._v("常见的微任务有 promise.then()、promise.catch()、new MutationObserver()、process.nextTick() 等。")])])]),t._v(" "),a("p",[t._v("从某种意义上讲，微任务不能算作严格意义上的异步任务，因为在底层是线上，V8 引擎并不会将属于微任务的异步任务交给其它线程执行，仍然是由 JS 引擎线程执行：将它的回调直接在执行完同步代码之后立刻直接执行。逻辑感官上，微任务好似改变了执行顺序的同步代码。")]),t._v(" "),a("ul",[a("li",[t._v("宏任务特征：有明确的异步任务需要执行和回调，需要其它线程支持；")]),t._v(" "),a("li",[t._v("微任务特征：没有明确地任务需要执行，只有回调，不需要其它线程支持。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'同步代码1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'setTimeout'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里的 0 ，实际上是默认 4 毫秒，它不是真正的 0 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'同步代码2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'promise.then'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'同步代码3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("setTimeout 和 promise.then 都是异步执行的，将在所以的同步代码块之后执行；")]),t._v(" "),a("li",[t._v("promise.then 是微任务，而 setTimeout 是宏任务，所以，promise.then 先执行；")]),t._v(" "),a("li",[t._v("new promise 是同步执行的。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);