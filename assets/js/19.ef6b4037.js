(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{493:function(v,_,t){"use strict";t.r(_);var a=t(62),e=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[v._v("#")]),v._v(" 栈")]),v._v(" "),t("h2",{attrs:{id:"关于栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于栈"}},[v._v("#")]),v._v(" 关于栈")]),v._v(" "),t("p",[v._v("关于栈，最最常见、最最贴切的例子，就是一摞叠在一起的盘子。我们平时放盘子的时候，都是从下往上一个一个放；取的时候，我们也是从上往下一个一个地依次取，不能从中间任意抽出。后进者先出，先进者后出，这就是典型的『栈』结构。")]),v._v(" "),t("p",[v._v("[stack-01.png]")]),v._v(" "),t("p",[v._v("从栈的操作特性上来看，栈是一种『操作受限』的线性表：只允许在一端插入和删除数据。")]),v._v(" "),t("p",[v._v("相比数组和链表，栈带给我们的只有限制"),t("small",[v._v("（功能只有减少，没有增多）")]),v._v("，并没有任何优势。那我们直接使用数组或者链表不就好了吗？为什么还要用这个“操作受限”的“栈”呢？")]),v._v(" "),t("p",[v._v("事实上，从功能上来说，数组或链表确实可以替代栈，但你要知道，特定的数据结构是对特定场景的抽象，而且，数组或链表暴露了太多的操作接口，操作上的确灵活自由，但使用时就比较不可控，自然也就更容易出错。")]),v._v(" "),t("p",[v._v("当某个数据集合只涉及在一端插入和删除数据，并且满足后进先出、先进后出的特性，我们就应该首选栈这种数据结构。")]),v._v(" "),t("h2",{attrs:{id:"关于队列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#关于队列"}},[v._v("#")]),v._v(" 关于队列")]),v._v(" "),t("p",[v._v("队列这个概念非常好理解。你可以把它想象成排队买票，先来的先买，后来的人只能站末尾，不允许插队。先进者先出，这就是典型的队列。")]),v._v(" "),t("p",[v._v("我们知道，栈只支持两个基本操作：入栈 push()和出栈 pop()。队列跟栈非常相似，支持的操\n作也很有限，最基本的操作也是两个：入队 enqueue()，放一个数据到队列尾部；出队dequeue()，从队列头部取一个元素。")]),v._v(" "),t("p",[v._v("[queue-01.png]")]),v._v(" "),t("p",[v._v("所以，队列跟栈一样，也是一种操作受限的线性表数据结构。")]),v._v(" "),t("p",[v._v("队列的概念很好理解，基本操作也很容易掌握。作为一种非常基础的数据结构，队列的应用也非常广泛，特别是一些具有某些额外特性的队列，比如循环队列、阻塞队列、并发队列。它们在很多偏底层系统、框架、中间件的开发中，起着关键性的作用。比如高性能队列 Disruptor、 Linux 环形缓存，都用到了循环并发队列；Java concurrent 并发包利用 ArrayBlockingQueue 来实现公平锁等。")]),v._v(" "),t("p",[v._v("跟栈一样，队列可以用数组来实现，也可以用链表来实现。")]),v._v(" "),t("ul",[t("li",[v._v("用数组实现的栈叫作顺序栈，用链表实现的栈叫作链式栈。")]),v._v(" "),t("li",[v._v("用数组实现的队列叫作顺序队列，用链表实现的队列叫作链式队列。")])]),v._v(" "),t("h2",{attrs:{id:"环形队列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环形队列"}},[v._v("#")]),v._v(" 环形队列")]),v._v(" "),t("p",[v._v("如果使用数组实现队列的话，在使用的早期队列中的数据类似如下：")]),v._v(" "),t("p",[v._v("[queue-02.png]")]),v._v(" "),t("p",[v._v("随着对队列进行出队和入队操作，队列中的数据会慢慢变成类似如下：")])])}),[],!1,null,null,null);_.default=e.exports}}]);