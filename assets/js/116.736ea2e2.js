(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{588:function(t,e,n){"use strict";n.r(e);var a=n(62),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"比较文件差异"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#比较文件差异"}},[t._v("#")]),t._v(" 比较文件差异")]),t._v(" "),n("h2",{attrs:{id:"_1-git-diff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-git-diff"}},[t._v("#")]),t._v(" 1. git diff")]),t._v(" "),n("p",[t._v("对比『"),n("strong",[t._v("工作空间中的文件")]),t._v("』与当前 Git 本地仓库中的最新、最近的版本版"),n("small",[t._v("（也就是 "),n("strong",[t._v("HEAD")]),t._v(" 版本）")]),t._v("之间的差异，使用命令 "),n("strong",[t._v("git diff <文件名>")]),t._v(" 。")]),t._v(" "),n("p",[t._v("不过，"),n("strong",[t._v("git diff")]),t._v("，只在终端里显示并不够直观，像是这样：")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("$ "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --git a/22 b/22\nindex e69de29"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("d83fdff "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v("\n--- a/22\n+++ b/22\n@@ -0,0 +1 @@\n+ddddddddddddddddddddd\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" No newline at end of "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --git a/4.txt b/4.txt\nindex e69de29"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("abaef31 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v("\n--- a/4.txt\n+++ b/4.txt\n@@ -0,0 +1 @@\n:"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".skipping"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --git a/22 b/22\nindex e69de29"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("d83fdff "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v("\n--- a/22\n+++ b/22\n@@ -0,0 +1 @@\n+ddddddddddddddddddddd\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" No newline at end of "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --git a/4.txt b/4.txt\nindex e69de29"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("abaef31 "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v("\n--- a/4.txt\n+++ b/4.txt\n@@ -0,0 +1 @@\n+ssdddddddddddddddddd\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v(" No newline at end of "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n")])])]),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),n("p",[t._v("强烈建议使用类似 Beyond Compare 这样的独立的第三方比较工具来进行比较。")]),t._v(" "),n("p",[t._v("另外，有些 Git 客户端也自带了类似的内容比较界面。")])]),t._v(" "),n("h2",{attrs:{id:"_2-git-difftool"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-git-difftool"}},[t._v("#")]),t._v(" 2. git difftool")]),t._v(" "),n("p",[n("strong",[t._v("git difftool")]),t._v(" 命令是 git diff 命令的升级版，它是调用第三方工具来进行比较。这些可用作比较的第三方工具中，最著名的比较工具是 Beyond Compare"),n("small",[t._v("（可惜是收费的）")]),t._v("。现在，随着 VS Code 的流行，有些人也习惯性使用 VS Code 作为 difftool"),n("small",[t._v("（ 和 megetools ）")]),t._v("。")]),t._v(" "),n("p",[n("small",[t._v("假设你的 Beyond Compare 没有改变默认的安装路径，那么它就是在 C:\\Program Files 下的。")])]),t._v(" "),n("p",[t._v("在你的 "),n("code",[t._v("C:\\Users\\<用户名>\\.gitconfig")]),t._v(" 文件中追加下述内容：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('[diff]\n  tool = beyondcompare4\n[difftool "beyondcompare4"]\n  cmd = \\"C:\\\\Program Files\\\\Beyond Compare 4\\\\BCompare.exe\\" $LOCAL $REMOTE\n[difftool "vscode"]\n  cmd = code --wait --diff $LOCAL $REMOTE\n')])])]),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("了解")]),t._v(" "),n("p",[t._v("有些资料和文档上是通过命令来进行设置的，其实 git 的设置命令本质上也就是在向 .gitconfig 配置文件中写入配置项。所以，你是通过配置命令进行配置，还是直截了当地修改 .gitconfig 配置文件，本质上是一样的。")])]),t._v(" "),n("p",[t._v("当你再使用 "),n("code",[t._v("git difftool <文件名>")]),t._v(" 来查看文件的变动情况时，git 会触发 Beyond Compare 的执行，让 Beyond Compare 来展示工作区和本地仓库中的区别。")]),t._v(" "),n("p",[t._v("虽然 GitKraken 中也内置了 diff 功能，能以图形化的形式展现工作区的变动，不过你也可以在 GitKraken 中触发 Beyond Compare 的执行：")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/git-difftool-GitKraken.gif",alt:"git-difftool-GitKraken.gif"}})]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('[diff]\n    tool = beyondcompare4\n[difftool "beyondcompare4"]\n    cmd = \\"C:\\\\Program Files\\\\Beyond Compare 4\\\\bcomp.exe\\" \\"$LOCAL\\" \\"$REMOTE\\"\n\n[merge]\n    tool = vscode\n[mergetool]\n    keepbackup = false\n[mergetool "beyondcompare4"]\n    cmd = \\"C:\\\\Program Files\\\\Beyond Compare 4\\\\bcomp.exe\\" \\"$REMOTE\\" \\"$LOCAL\\" \\"$BASE\\" \\"$MERGED\\"\n    trustexitcode = true\n[mergetool "vscode"]\n  keepbackup = false\n  cmd = code --wait $MERGED\n  trustexitcode = true\n')])])])])}),[],!1,null,null,null);e.default=s.exports}}]);