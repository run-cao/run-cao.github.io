(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{513:function(s,a,t){"use strict";t.r(a);var e=t(62),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[s._v("简单来说，docker-compose 能简化我们对 docker 的操作"),t("small",[s._v("（当然，它还有更多的功能）")]),s._v("，并且它别 docker run 命令更具有可读性。")]),s._v(" "),t("p",[s._v("Compose 有 2 个重要的概念：")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("项目")]),t("small",[s._v("（Project）")]),s._v("：由一组关联的应用容器组成的一个完整业务单元，在 docker-compose.yml 文件中定义。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("服务")]),t("small",[s._v("（Service）")]),s._v("：一个应用的容器，实际上可以包括若干运行相同镜像的容器实例。")])])]),s._v(" "),t("h2",{attrs:{id:"_1-docker-compose-安装与卸载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-docker-compose-安装与卸载"}},[s._v("#")]),s._v(" 1. docker compose 安装与卸载")]),s._v(" "),t("p",[s._v("docker-compose 本质上是一个命令"),t("small",[s._v("（而命令的本质则是一个可执行的二进制文件）")]),s._v("，当然，docker-compose 不是 Linux 自带的命令，所以需要我们 “安装” 。")]),s._v(" "),t("p",[s._v("所谓的 “安装” ，本质上就是将 docker-compose 的二进制可执行程序放在 Linux 特定的目录下，让 Linux 系统 “多” 出来一个命令可用。")]),s._v(" "),t("el-tabs",{attrs:{tabPosition:"left"}},[t("el-tab-pane",{attrs:{label:"第 1 步"}},[t("p",[s._v("获得 docker-compose 二进制程序")]),s._v(" "),t("p",[s._v("网速和人品不好的时候，你需要老师把已经下好的 docker-compose 发给你，你再上传到你的 Linux 服务器上：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("rz  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过 xshell 上传")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" docker-compose-Linux-x86_64 /usr/local/bin/docker-compose\n")])])]),t("p",[s._v("网速和人品都不错的时候，你可以从 docekr-compse 的 github 仓库"),t("small",[s._v("（或者国内的 daocloud ）")]),s._v("下载：")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# sudo curl -L "https://github.com/docker/compose/releases/download/1.29.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -L https://get.daocloud.io/docker/compose/releases/download/v2.2.2/docker-compose-"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -s"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("-"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /usr/local/bin/docker-compose\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/docker-compose\n")])])]),t("p",[s._v("你可以通过修改 URL 中的版本，可以自定义您的需要的版本。")])]),s._v(" "),t("el-tab-pane",{attrs:{label:"第 2 步"}},[t("p",[s._v("启用 docker-compose 命令")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/docker-compose\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ln")]),s._v(" -s /usr/local/bin/docker-compose /usr/bin/docker-compose\ndocker-compose --version\n")])])])])],1),s._v(" "),t("h2",{attrs:{id:"_2-docker-compose-重要命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-docker-compose-重要命令"}},[s._v("#")]),s._v(" 2. docker compose 重要命令")]),s._v(" "),t("h3",{attrs:{id:"_2-1-命令选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-命令选项"}},[s._v("#")]),s._v(" 2.1 命令选项")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",{staticStyle:{"text-align":"left"}},[s._v("命令选项")]),s._v(" "),t("th",{staticStyle:{"text-align":"left"}},[s._v("说明")])])]),s._v(" "),t("tbody",[t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("strong",[s._v("-f")]),s._v(" <FILE>")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("指定使用的 Compose 模板文件，默认为 docker-compose.yml")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[t("strong",[s._v("-p <NAME>")])]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("指定项目名称，"),t("br"),s._v("默认将使用所在目录名称作为项目名")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("–verbose")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("输出更多调试信息")])]),s._v(" "),t("tr",[t("td",{staticStyle:{"text-align":"left"}},[s._v("-v")]),s._v(" "),t("td",{staticStyle:{"text-align":"left"}},[s._v("打印版本并退出")])])])]),s._v(" "),t("h3",{attrs:{id:"_2-2-常用-重要命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-常用-重要命令"}},[s._v("#")]),s._v(" 2.2 常用 & 重要命令")]),s._v(" "),t("p",[t("strong",[s._v("docker-compose")]),s._v(" 等同于 "),t("strong",[s._v("docker-compose -f docker-compose.yml")]),s._v(" 命令，很显然，默认的编排文件的文件名是 docker-compose.yml 。"),t("small",[s._v("如果你的编排文件的文件名不是 docker-compose.yml，那么你就需要使用 -f 选项给指定。")])]),s._v(" "),t("el-tabs",{attrs:{tabPosition:"left"}},[t("el-tab-pane",{attrs:{label:"config"}},[t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker-compose -f xxx.yml config\n")])])]),t("p",[s._v("验证 Compose 文件格式是否正确，若正确则显示配置，若格式错误显示错误原因。")]),s._v(" "),t("p",[s._v("此命令不会执行真正的操作，而是显示 docker-compose 程序解析到的配置文件内容。")])]),s._v(" "),t("el-tab-pane",{attrs:{label:"images"}},[t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker-compose -f xxx.yml images\n")])])]),t("p",[s._v("列出 Compose 文件中包含的镜像。")])]),s._v(" "),t("el-tab-pane",{attrs:{label:"ps"}},[t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker-compose -f xxx.yml "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("\n")])])]),t("p",[s._v("列出项目中目前的所有容器。")])]),s._v(" "),t("el-tab-pane",{attrs:{label:"build"}},[t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker-compose -f xxx.yml build\n")])])]),t("p",[s._v("构建"),t("small",[s._v("（重新构建）")]),s._v("项目中的服务容器。")]),s._v(" "),t("p",[s._v("一般搭配自定义镜像，比如编写的 Dockfile ，功能类似于 "),t("code",[s._v("docker build .")])])]),s._v(" "),t("el-tab-pane",{attrs:{label:"up"}},[t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker-compose -f xxx.yml up\n")])])]),t("p",[s._v("该命令十分强大"),t("small",[s._v("（"),t("strong",[s._v("重点掌握")]),s._v("）")]),s._v("，它将尝试自动完成包括构建镜像，"),t("small",[s._v("（重新）")]),s._v("创建服务，启动服务，并关联服务相关容器的一系列操作。具体见下章。")])]),s._v(" "),t("el-tab-pane",{attrs:{label:"down"}},[t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker-compose -f xxx.yml down\n")])])]),t("p",[s._v("此命令停止用 up 命令所启动的容器并移除网络。")])]),s._v(" "),t("el-tab-pane",{attrs:{label:"stop"}},[t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker-compose -f xxx.yml stop\n")])])]),t("p",[s._v("停止已经处于运行状态的容器，但不删除它。通过 "),t("strong",[s._v("docker-compose start")]),s._v(" 可以再次启动这些容器。")]),s._v(" "),t("p",[s._v("如果不指定 service 时是默认停止所有的容器。如 docker-compose -f skywalking.yml stop elasticsearch")]),s._v(" "),t("p",[s._v("选项：-t, --timeout <TIMEOUT> 停止容器时候的超时"),t("small",[s._v("（默认为 10 秒）")]),s._v("。")])]),s._v(" "),t("el-tab-pane",{attrs:{label:"start"}},[t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker-compose -f xxx.yml start\n")])])]),t("p",[s._v("启动已经存在的服务容器。用法跟上面的 stop 刚好相反。如果不指定 service 时是默认启动所有的容器。")])]),s._v(" "),t("el-tab-pane",{attrs:{label:"restart"}},[t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker-compose -f xxx.yml restart\n")])])]),t("p",[s._v("重启项目中的服务。用法跟上面的 stop，start 一样。")])]),s._v(" "),t("el-tab-pane",{attrs:{label:"logs"}},[t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("docker-compose -f xxx.yml logs\n")])])]),t("p",[s._v("查看服务容器的输出。默认情况下，docker-compose 将对不同的服务输出使用不同的颜色来区分。可以通过 "),t("code",[s._v("--no-color")]),s._v(" 来关闭颜色。该命令在调试问题的时候十分有用。如")]),s._v(" "),t("p",[t("strong",[s._v("docker-compose -f xxx.yml logs")]),s._v(" 查看整体的日志")]),s._v(" "),t("p",[t("strong",[s._v("docker-compose -f xxx.yml logs elasticsearch")]),s._v(" 查看单独容器的日志"),t("br")])])],1),s._v(" "),t("h3",{attrs:{id:"_2-3-关键命令-docker-up"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-关键命令-docker-up"}},[s._v("#")]),s._v(" 2.3 关键命令：docker up")]),s._v(" "),t("p",[t("strong",[s._v("docker-compose -f xxx.yml up")]),s._v(" 命令十分强大"),t("small",[s._v("（"),t("strong",[s._v("重点掌握")]),s._v("）")]),s._v("，它将尝试自动完成包括构建镜像，"),t("small",[s._v("（重新）")]),s._v("创建服务，启动服务，并关联服务相关容器的一系列操作。")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("docker-compose -f xxx.yml up -d")])]),s._v(" "),t("p",[s._v("默认情况，"),t("strong",[s._v("docker-compose up")]),s._v(" 启动的容器都在前台，控制台将会同时打印所有容器的输出信息，可以很方便进行调试。")]),s._v(" "),t("p",[s._v("如果使用"),t("strong",[s._v("docker-compose up -d")]),s._v(" 将会在后台启动并运行所有的容器。一般推荐生产环境下使用该选项。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("docker-compose -f xxx.yml up --no-recreate")])]),s._v(" "),t("p",[s._v("默认情况，如果服务容器已经存在，"),t("strong",[s._v("docker-compose up")]),s._v(" 将会尝试停止容器，然后重新创建"),t("small",[s._v("（保持使用 volumes-from 挂载的卷）")]),s._v("，以保证新启动的服务匹配 docker-compose.yml 文件的最新内容。")]),s._v(" "),t("p",[s._v("如果用户不希望容器被停止并重新创建，可以使用 "),t("strong",[s._v("docker-compose up --no-recreate")]),s._v(" 。这样将只会启动处于停止状态的容器，而忽略已经运行的服务。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("docker-compose -f xxx.yml up --no-deps -d <SERVICE_NAME>")])]),s._v(" "),t("p",[s._v("如果用户只想重新部署某个服务，可以使用 "),t("strong",[s._v("docker-compose up --no-deps -d <SERVICE_NAME>")]),s._v(" 来重新创建服务并后台停止旧服务，启动新服务，并不会影响到其所依赖的服务。")])])]),s._v(" "),t("p",[s._v("docker-compose -f xxx.yml up 命令总结")]),s._v(" "),t("ol",[t("li",[s._v("-d 在后台运行服务容器。")]),s._v(" "),t("li",[s._v("--no-color 不使用颜色来区分不同的服务的控制台输出。")]),s._v(" "),t("li",[s._v("--no-deps 不启动服务所链接的容器。")]),s._v(" "),t("li",[s._v("--force-recreate 强制重新创建容器，不能与 --no-recreate 同时使用。")]),s._v(" "),t("li",[s._v("--no-recreate 如果容器已经存在了，则不重新创建，不能与 --force-recreate 同时使用。")]),s._v(" "),t("li",[s._v("--no-build 不自动构建缺失的服务镜像。")]),s._v(" "),t("li",[s._v("-t, --timeout TIMEOUT 停止容器时候的超时"),t("small",[s._v("（默认为 10 秒）")]),s._v("。")])]),s._v(" "),t("h2",{attrs:{id:"_3-docker-compose-yml-文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-docker-compose-yml-文件"}},[s._v("#")]),s._v(" 3. docker-compose.yml 文件")]),s._v(" "),t("p",[s._v("默认的模板文件名称为 docker-compose.yml，格式为 YAML 格式。其内容例如：")]),s._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mysql-3306")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3306")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("8.0.16\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("network_mode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bridge"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# restart: always")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" MYSQL_ROOT_PASSWORD=123456\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./3306/conf.d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/etc/mysql/conf.d\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./3306/mysql.conf.d"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/etc/mysql/mysql.conf.d\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./3306/data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/lib/mysql\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3306:3306"')]),s._v("\n")])])]),t("p",[s._v("注意每个服务都必须通过 image 指令指定镜像或 build 指令"),t("small",[s._v("（需要 Dockerfile）")]),s._v("等来自动构建生成镜像。如果使用 build 指令，在 Dockerfile 中设置的选项"),t("small",[s._v("（例如：CMD, EXPOSE, VOLUME, ENV 等）")]),s._v("将会自动被获取，无需在 docker-compose.yml 中重复设置。")]),s._v(" "),t("p",[t("big",[t("strong",[s._v("docker-compose.yml 文件内容详解 ：")])])],1),s._v(" "),t("el-tabs",[t("el-tab-pane",{attrs:{label:"images"}},[t("p",[s._v("指定为镜像名称或镜像 ID 。如果镜像在本地不存在，Compose 将会尝试拉取这个镜像。")]),s._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("image: apache/skywalking-oap-server:6.5.0\nimage: apache/skywalking-ui:6.5.0\n")])])])]),s._v(" "),t("el-tab-pane",{attrs:{label:"ports"}},[t("p",[s._v("暴露端口信息。使用 "),t("code",[s._v("宿主端口:容器端口")]),s._v(" "),t("small",[s._v("(HOST:CONTAINER)")]),s._v("格式，或者仅仅指定容器的端口"),t("small",[s._v("（宿主将会随机选择端口）")]),s._v("都可以，端口字符串都使用引号包括起来的字符串格式。")]),s._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3000"')]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"8080:8080"')]),s._v(" \n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"127.0.0.1:8001:8001"')]),s._v("\n")])])])]),s._v(" "),t("el-tab-pane",{attrs:{label:"volumes"}},[t("p",[s._v("数据卷所挂载路径设置。可以设置为宿主机路径"),t("small",[s._v("（"),t("code",[s._v("HOST:CONTAINER")]),s._v("）")]),s._v("或者数据卷名称"),t("small",[s._v("（"),t("code",[s._v("VOLUME:CONTAINER")]),s._v("）")]),s._v("，并且可以设置访问模式"),t("small",[s._v("（"),t("code",[s._v("HOST:CONTAINER:ro")]),s._v("）")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /app/skywalking/elasticsearch/data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/usr/share/elasticsearch/data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("rw\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" conf/elasticsearch.yml"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/usr/share/elasticsearch/config/elasticsearch.yml\n")])])])]),s._v(" "),t("el-tab-pane",{attrs:{label:"ulimits"}},[t("p",[s._v("指定容器的 ulimits 限制值。例如，指定最大进程数为 65535 ，指定文件句柄数为 20000"),t("small",[s._v("（软限制，应用可以随时修改，不能超过硬限制）")]),s._v("和 40000"),t("small",[s._v("（系统硬限制，只能 root 用户提高）")]),s._v("。")]),s._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ulimits")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nproc")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nofile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("soft")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20000")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hard")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("40000")]),s._v("\n")])])])]),s._v(" "),t("el-tab-pane",{attrs:{label:"depends_on"}},[t("p",[s._v("解决容器的依赖、启动先后的问题。以下例子中会先启动 redis mysql 再启动 web")]),s._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("web")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" .\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("depends_on")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" db\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" redis\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("db")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql\n")])])])]),s._v(" "),t("el-tab-pane",{attrs:{label:"environment"}},[t("p",[s._v("设置环境变量。你可以使用数组或字典两种格式。")]),s._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("SW_STORAGE")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" elasticsearch\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("SW_STORAGE_ES_CLUSTER_NODES")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" elasticsearch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9200")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" SW_STORAGE=elasticsearch\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" SW_STORAGE_ES_CLUSTER_NODES=elasticsearch"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9200")]),s._v("\n")])])])]),s._v(" "),t("el-tab-pane",{attrs:{label:"restart"}},[t("p",[s._v("指定容器退出后的重启策略为始终重启。该命令对保持服务始终运行十分有效，在生产环境中推荐配置为 always 或者 unless-stopped 。")]),s._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" always\n")])])])])],1),s._v(" "),t("h3",{attrs:{id:"docker-compose-yml-的-volumes-的第二种写法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-yml-的-volumes-的第二种写法"}},[s._v("#")]),s._v(" docker-compose.yml 的 volumes 的第二种写法")]),s._v(" "),t("p",[s._v("docker-compose 里 2 种设置方式都是可以持久化的。")]),s._v(" "),t("el-tabs",[t("el-tab-pane",{attrs:{label:"写法一：使用绝对路径"}},[t("p",[s._v("路径直接挂载到本地，比较直观。缺点是需要管理本地的路径；")]),s._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ghost")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  \n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ghost\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./ghost/config.js"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/lib/ghost/config.js\n")])])])]),s._v(" "),t("el-tab-pane",{attrs:{label:"写法二：使用卷标"}},[t("p",[s._v("使用卷标的方式，比较简洁。缺点是你不知道数据存在本地什么位置。")]),s._v(" "),t("div",{staticClass:"language-yaml extra-class"},[t("pre",{pre:!0,attrs:{class:"language-yaml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mysql")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("  \n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" mysql\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" mysql"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/var/lib/mysql\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("mysql")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n")])])])])],1),s._v(" "),t("p",[s._v("对于上面使用卷标的写法，你可能需要使用下面的命令查看卷标信息：")]),s._v(" "),t("el-tabs",[t("el-tab-pane",{attrs:{label:"查看所有卷标"}},[t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("docker volume "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" \n")])])])]),s._v(" "),t("el-tab-pane",{attrs:{label:"查看批量的卷标"}},[t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("docker volume "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" mysql\n")])])]),t("p",[s._v("其结果类似如下：")]),s._v(" "),t("div",{staticClass:"language-text extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("local     docker_mysql-3306-data\n")])])])]),s._v(" "),t("el-tab-pane",{attrs:{label:"查看 volume 详情"}},[t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("docker volume inspect docker_mysql-3306-data\n")])])]),t("p",[s._v("其结果类似如下：")]),s._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"CreatedAt"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2021-04-20T05:32:02+08:00"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Driver"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"local"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Labels"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"com.docker.compose.project"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"com.docker.compose.version"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.29.0"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"com.docker.compose.volume"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mysql-3306-data"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Mountpoint"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/var/lib/docker/volumes/docker_mysql-3306-data/_data"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Name"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker_mysql-3306-data"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Options"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token null keyword"}},[s._v("null")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Scope"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"local"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])])]),t("p",[s._v("另外， 如果使用到了 volumes 一定要注意，在进行 "),t("code",[s._v("docker-compose down")]),s._v(" 时，会自动删除原有容器以及虚拟网，"),t("strong",[s._v("但是其中定义的 volumes 会保留")]),s._v("。如果要 down 的同时清理干净，就直接加参数 "),t("code",[s._v("--volumes")]),s._v(" 。")])])],1)],1)}),[],!1,null,null,null);a.default=n.exports}}]);