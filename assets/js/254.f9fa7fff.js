(window.webpackJsonp=window.webpackJsonp||[]).push([[254],{726:function(t,s,a){"use strict";a.r(s);var n=a(62),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"sentinel-访问限流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sentinel-访问限流"}},[t._v("#")]),t._v(" Sentinel：访问限流")]),t._v(" "),a("p",[t._v("回顾前面笔记中的 “关于 Sentinel 的使用方式” 章节，在这里，我们在服务的 “被调方” 使用 Sentinel 整合 Spring MVC 进行流量控制。")]),t._v(" "),a("p",[t._v("在这里，Sentinel 借助 Spring MVC 框架的 “拦截器” 机制整合进入 Spring MVC ，“抢先” 在 Controller 执行之前进行流控"),a("small",[t._v("（和熔断）")]),t._v("的判断，从而决定当前请求是否被放行至 Controller 。")]),t._v(" "),a("h2",{attrs:{id:"_1-sentinel-和-spring-mvc-整合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-sentinel-和-spring-mvc-整合"}},[t._v("#")]),t._v(" 1. Sentinel 和 Spring MVC 整合")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("添加依赖")]),t._v(" "),a("div",{staticClass:"language-xml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("com.alibaba.cloud"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("spring-cloud-starter-alibaba-sentinel"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 其实真正起作用的是被关联引入的 sentinel-spring-webmvc-adapter 包 --\x3e")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("添加配置（连接到 sentinel-dashboard）")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sentinel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("transport")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dashboard")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 127.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8858")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 日志设置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("logging")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("level")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("root")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" INFO\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' "$'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("CONSOLE_LOG_PATTERN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\\\n        "),a("span",{pre:!0,attrs:{class:"token directive important"}},[t._v("%clr(${LOG_LEVEL_PATTERN:%5p}) \\")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive important"}},[t._v("%clr(|){faint} \\")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive important"}},[t._v("%clr(%-40.40logger{39}){cyan} \\")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive important"}},[t._v("%clr(:){faint} \\")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token directive important"}},[t._v('%m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}"')]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("访问 sentinel-dashboard 可以看到类似如下页面：")]),t._v(" "),a("p",[t._v("只需要完成上述的配置，代码不需要有任何的调整，我们就可以通过实时监控查看服务内的流量 QPS 以及平均响应时长等信息。")]),t._v(" "),a("div",{staticClass:"custom-block danger"},[a("p",{staticClass:"custom-block-title"},[t._v("警告")]),t._v(" "),a("p",[t._v("只有服务接口被访问的情况下，在 sentinel 里面才可以看到监控信息。这可能会让你『等』一段时间。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba//img/sentinel-01.png",alt:"sentinel-plus-01"}})])])]),t._v(" "),a("h2",{attrs:{id:"_2-几个概念和-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-几个概念和-name"}},[t._v("#")]),t._v(" 2. 几个概念和 name")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("上下文"),a("small",[t._v("（ Context ）")]),t._v("和 context-name")]),t._v(" "),a("p",[t._v("Context 代表调用链路上下文。在整个调用链路的开始处"),a("small",[t._v("（即，前面章节所展示的 Sentinel 的执行流程的 ① 处）")]),t._v("，Sentinel 会创建上下文 Context 对象，并且为它指定一个 name 。")]),t._v(" "),a("p",[t._v("在 Sentinel 中，不同的调用链路可能使用同一个上下文 Context 对象。在这里"),a("small",[t._v("（ 和 Spring MVC 整合 ）")]),t._v("，我们的调用链路都是在 "),a("strong",[t._v("sentinel_spring_web_context")]),t._v(" 中：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba/img/sentinel-context.png",alt:"sentinel-context"}})])]),t._v(" "),a("li",[a("p",[t._v("资源"),a("small",[t._v("（Resource）")]),t._v("和 resource-name")]),t._v(" "),a("p",[t._v("在 Sentinel 中，被 Sentinel try-catch 起来的 “真·代码”"),a("small",[t._v("（ 即，前面章节中所展示的 Sentinel 的执行流程的 ③ 处 ）")]),t._v("在 Sentinel 看来就是所谓的 “资源”，对于每一份资源，Sentinel 会为赋予一个 name"),a("small",[t._v("（或者你手动指定）")])]),t._v(" "),a("p",[t._v("和 Spring MVC 整合时，Sentinel 使用的是 URI 来作为 Controller 方法的资源名"),a("small",[t._v("（ 在这里，Controller 方法就是资源 ）")]),t._v("。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba/img/sentinel-resource.png",alt:"sentinel-resource"}})])])]),t._v(" "),a("h2",{attrs:{id:"_3-流控规则-qps-限流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-流控规则-qps-限流"}},[t._v("#")]),t._v(" 3. 流控规则：QPS 限流")]),t._v(" "),a("h3",{attrs:{id:"_3-1-如何添加流控规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-如何添加流控规则"}},[t._v("#")]),t._v(" 3.1 如何添加流控规则")]),t._v(" "),a("p",[t._v("在菜单左侧的 "),a("code",[t._v("簇点链路")]),t._v(" 和流控规则都可以针对 "),a("code",[t._v("服务接口")]),t._v(" 添加流控规则：")]),t._v(" "),a("p",[t._v("当我们的服务接口资源被访问的时候，就会出现在 "),a("code",[t._v("簇点链路")]),t._v(" 列表中，我们可以针对该服务接口资源配置流程控制规则。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba/img/sentinel-02.png",alt:"sentinel-02"}})]),t._v(" "),a("p",[t._v("在流控规则页面也有 "),a("code",[t._v("新增流控规则")]),t._v(" 按钮，添加完成之后的流控规则，出现在流控规则页面列表中。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba/img/sentinel-03.png",alt:"sentinel-03"}})]),t._v(" "),a("h3",{attrs:{id:"_3-2-qps-流控"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-qps-流控"}},[t._v("#")]),t._v(" 3.2 QPS 流控")]),t._v(" "),a("p",[t._v("点击 "),a("code",[t._v("新增流控规则")]),t._v(" 按钮之后，弹出如下的配置页面：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba/img/sentinel-04.png",alt:"sentinel-04"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("资源名称")]),t._v(" "),a("p",[t._v("表示我们针对哪个接口资源进行流控规则配置，如："),a("code",[t._v("/departments/{id}")])])]),t._v(" "),a("li",[a("p",[t._v("针对来源")]),t._v(" "),a("p",[t._v("表示针对哪一个服务访问当前接口资源的时候进行限流，"),a("strong",[t._v("default")]),t._v(" 表示不区分访问来源。")]),t._v(" "),a("p",[a("small",[t._v("如填写服务名称：xxx-service，表示 xxx-service 访问前接口资源的时候进行限流，其他服务访问该接口资源的时候不限流。")])])]),t._v(" "),a("li",[a("p",[t._v("阈值类型/单机阈值：QPS，每秒钟请求数量。上图配置表示每秒钟超过1次请求的时候进行限流。")])]),t._v(" "),a("li",[a("p",[t._v("流控模式")]),t._v(" "),a("p",[t._v("直接，当达到限流标准时就直接限流。")])]),t._v(" "),a("li",[a("p",[t._v("流控效果：")]),t._v(" "),a("p",[t._v("快速失败。很简单的说就是达到限流标准后，请求就被拦截，直接失败。"),a("small",[t._v("（HTTP状态码：429 too many request）")])])]),t._v(" "),a("li",[a("p",[t._v("是否集群：")]),t._v(" "),a("p",[t._v("默认情况下我们的限流策略都是针对单个服务的，sentinel 提供了集群限流的功能。")]),t._v(" "),a("p",[t._v("除非你的微服务规模特别大，一般不要使用集群模式。集群模式需要各节点与 token server 交互才可以，会增加网络交互次数，一定程度上会拖慢你的服务响应时间。")])])]),t._v(" "),a("p",[t._v("上面的限流规则用一句话说：对于任何来源的请求，当超过每秒 2 次的标准之后就直接限流，访问失败抛出 "),a("strong",[t._v("BlockException")]),t._v(" 异常！")]),t._v(" "),a("h2",{attrs:{id:"_4-流控规则-线程数限流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-流控规则-线程数限流"}},[t._v("#")]),t._v(" 4. 流控规则：线程数限流")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba/img/sentinel-05.png",alt:"sentinel-05"}})]),t._v(" "),a("ul",[a("li",[a("p",[t._v("资源名称")]),t._v(" "),a("p",[t._v("表示我们针对哪个接口资源进行流控规则配置，如："),a("code",[t._v("/departments/{id}")])])]),t._v(" "),a("li",[a("p",[t._v("针对来源")]),t._v(" "),a("p",[t._v("表示针对哪一个服务访问当前接口资源的时候进行限流，default 表示不区分访问来源。")]),t._v(" "),a("p",[a("small",[t._v("如填写服务名称：xxxx-service ，表示 xxx-service 访问前接口资源的时候进行限流，其他服务访问该接口资源的时候不限流。")])])]),t._v(" "),a("li",[a("p",[t._v("阈值类型/单机阈值")]),t._v(" "),a("p",[t._v("线程数。表示开启 n 个线程处理资源请求。")])]),t._v(" "),a("li",[a("p",[t._v("流控模式")]),t._v(" "),a("p",[t._v("直接，当所有线程都被占用时，新进来的请求就直接限流")])]),t._v(" "),a("li",[a("p",[t._v("流控效果")]),t._v(" "),a("p",[t._v("快速失败。很简单的说就是达到限流标准后，请求就被拦截，直接失败。"),a("small",[t._v("（HTTP 状态码：429 too many request）")])])])]),t._v(" "),a("p",[t._v("上面的限流规则用一句话说：对于任何来源的请求，department-service 服务端 "),a("code",[t._v("/departments/{id}")]),t._v(" 资源接口的 2 个线程都被占用的时候，其他访问失败！")]),t._v(" "),a("h2",{attrs:{id:"_5-关联限流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-关联限流"}},[t._v("#")]),t._v(" 5. 关联限流")]),t._v(" "),a("p",[t._v("关联限流："),a("code",[t._v("/important")]),t._v(" 接口的重要程度要高于 "),a("code",[t._v("/normal")]),t._v(" 接口，如果，"),a("code",[t._v("/important")]),t._v(" 接口的访问压力很大，那么，可以『牺牲』掉 "),a("code",[t._v("/normal")]),t._v(" 接口，全力保证 "),a("code",[t._v("/important")]),t._v(" 接口的正常运行。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba/img/sentinel-06.png",alt:"sentinel-06"}})]),t._v(" "),a("p",[t._v("上述的配置的意思是，如果 "),a("code",[t._v("/important")]),t._v(" 的访问压力达到了每秒 1 次，那么就对 "),a("code",[t._v("/normal")]),t._v(" 就会被限流，把 "),a("code",[t._v("/normal")]),t._v(" 接口停掉，以保证硬件资源全力供应 "),a("code",[t._v("/important")]),t._v(" 服务。")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("上述是对 "),a("code",[t._v("/normal")]),t._v(" 的配置，不需要去配置 "),a("code",[t._v("/important")]),t._v(" 即可生效，也就是说，"),a("code",[t._v("/important")]),t._v(" 可以没有限流规则。")])]),t._v(" "),a("h2",{attrs:{id:"_6-链路限流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-链路限流"}},[t._v("#")]),t._v(" 6. 链路限流")]),t._v(" "),a("p",[t._v("链路限流和关联限流的思路很像，假设运营认为 "),a("code",[t._v("/important")]),t._v(" 接口的重要程度要高于 "),a("code",[t._v("/normal")]),t._v(" 接口，而且，它俩如果又都调用了同一个 Service 的方法，那么，我们可以『站在 Service 的方法』的角度上进行设置：如果，是 "),a("code",[t._v("/normal")]),t._v(" 接口在调用 Service 方法，那么就进行限流，而 "),a("code",[t._v("/important")]),t._v(" 接口的调用就不限流，或设置为更宽松一些的流控。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("在 Service 的方法上使用注解 "),a("strong",[t._v("@SentinelResource")]),t._v(" ：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SentinelResource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doSomething"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("通过配置关闭 sentinel 的 URL 收敛功能:")]),t._v(" "),a("div",{staticClass:"language-yml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cloud")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sentinel")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web-context-unify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n")])])]),a("p",[t._v("网上又资料显示该配置在低版本中无效，被认为是一个 bug ，不过现在高版本（spring-cloud-alibaba "),a("code",[t._v("2.2.2.RELEASE")]),t._v("）中修正了这个 bug 。")]),t._v(" "),a("p",[t._v("接下来，你会在 Sentinel 中看到 "),a("code",[t._v("/important")]),t._v(" 和 "),a("code",[t._v("/normal")]),t._v(" 两个 URI 下都有一个 "),a("code",[t._v("doSomething")]),t._v(" 。如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba/img/sentinel-07.png",alt:"sentinel-07"}})])]),t._v(" "),a("li",[a("p",[t._v("现在你可以在流控规则中为 "),a("code",[t._v("doSomething")]),t._v(" 添加流控规则。注意，是 "),a("code",[t._v("doSomething")]),t._v(" ，而不是 "),a("code",[t._v("/important")]),t._v(" 或 "),a("code",[t._v("/normal")]),t._v(" 。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/spring-cloud-alibaba/img/sentinel-08.png",alt:"sentinel-08"}})])]),t._v(" "),a("li",[a("p",[t._v("分别触发 "),a("code",[t._v("/important")]),t._v(" 和 "),a("code",[t._v("/normal")]),t._v("，你会发现 "),a("code",[t._v("/normal")]),t._v(" 有流量限制，而 "),a("code",[t._v("/important")]),t._v(" 则没有。")])])]),t._v(" "),a("h2",{attrs:{id:"_7-流控效果"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-流控效果"}},[t._v("#")]),t._v(" 7. 流控效果")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("快速失败")])]),t._v(" "),a("p",[t._v("直接失败，抛出异常，不做任何额外的处理，是最简单、最直接、最常用的效果。")])]),t._v(" "),a("li",[a("p",[t._v("Warm up")]),t._v(" "),a("p",[t._v("它从开始阈值到最大 QPS 阈值会有一个缓冲阶段，一开始的阈值是最大 QPS 阈值的 1/3 ，然后慢慢增长，直到达到最大阈值。")])]),t._v(" "),a("li",[a("p",[t._v("排队等待")]),t._v(" "),a("p",[t._v("让请求以均匀的速度通过，单机阈值为每秒通过数量，其余的排序等待。即，如果单机阈值为 N，那么没 1/N 秒有一个访问『资格』。没有『资格』时，排队等待，直到超时。")])])]),t._v(" "),a("h2",{attrs:{id:"_8-sentinel-和-springmvc-整合原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-sentinel-和-springmvc-整合原理"}},[t._v("#")]),t._v(" 8. Sentinel 和 SpringMVC 整合原理")]),t._v(" "),a("p",[t._v("回顾一下我们之前所展示的 Sentinel 的底层执行流程：")]),t._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1. 初始化上下文;\ntry {\n  2. 熔断、流控逻辑的判断，判断当前请求是否能继续执行;\n  3. 执行 “真·代码”;\n} catch (BlockException e) {\n  4. 上述第 2 步未能通过，会抛出 BlockException ，表示请求被拒绝\n  return;\n} catch (Exception e) {\n  5. 业务异常。记录、统计异常信息\n  throw e;\n} finally {\n  6. 收尾工作：曾经创建的资源该回收的回收，该清除的清除\n}\n")])])]),a("p",[t._v("之前有提到过，Sentinel 和 Spring MVC 的整合利用了 Spring MVC 的拦截器机制。")]),t._v(" "),a("p",[t._v("Sentinel 实现了一个名为 SentinelWebInterceptor 的拦截器，其逻辑伪代码如下：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SentinelWebInterceptor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HandlerInterceptor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("preHandle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletResponse")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 初始化上下文"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 熔断、流控逻辑的判断，判断当前请求是否能继续执行"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 此时 Controller 方法会被调用。Controller 方法就是 3 。")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BlockException")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.")]),t._v(" 上述第 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 步未能通过，会抛出 "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BlockException")]),t._v(" ，表示请求被拒绝\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("postHandle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletResponse")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Nullable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ModelAndView")]),t._v(" modelAndView"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("afterCompletion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletResponse")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" handler"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Nullable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("发生了异常"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.")]),t._v(" 业务异常。记录、统计异常信息\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("6.")]),t._v(" 收尾工作：曾经创建的资源该回收的回收，该清除的清除\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"_9-自定义熔断返回信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-自定义熔断返回信息"}},[t._v("#")]),t._v(" 9. 自定义熔断返回信息")]),t._v(" "),a("p",[t._v("Sentinel 返回的默认信息是 "),a("code",[t._v("Blocked by Sentinel (flow limiting)")]),t._v(" ，如果你对默认信息不满意，你可以自定义熔断返回信息。")]),t._v(" "),a("p",[t._v("Sentinel 提供了 "),a("strong",[t._v("BlockExceptionHandler")]),t._v(" 接口。当无论因何原因触发了 Sentinel 阻断用户的正常请求，Sentinel 都将『进入』到用户自定义的 "),a("strong",[t._v("BlockExceptionHandler")]),t._v(" 接口的实现类中，执行 "),a("strong",[t._v("handle")]),t._v(" 方法，并传入当前的请求、响应对象以及异常对象，并以 "),a("strong",[t._v("handle")]),t._v(" 方法的执行结果作为返回，回传给用户。")]),t._v(" "),a("p",[t._v("通过对 handle 方法的异常参数的判断，你可以直到当前发生了什么状况：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyBlockExceptionHandler")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BlockExceptionHandler")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" request"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletResponse")]),t._v(" response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BlockException")]),t._v(" ex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FlowException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"限流了"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ex "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DegradeException")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"熔断了"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"其它原因"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// ParamFlowException   "热点参数限流";')]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// SystemBlockException "系统规则（负载/...不满足要求）";')]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// AuthorityException   "授权规则不通过";')]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// http 状态码")]),t._v("\n        response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setStatus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCharacterEncoding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setHeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/json;charset=utf-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setContentType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/json;charset=utf-8"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 利用 spring mvc 默认的 json 库 jackson")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ObjectMapper")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("response"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getWriter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("需要说明的是：不止因为熔断这一个原因会导致 "),a("strong",[t._v("BlockExceptionhandler")]),t._v(" 的 "),a("strong",[t._v("handle")]),t._v(" 方法的执行，因此，需要对 handle 方法的 BlockException 参数对象进行 "),a("strong",[t._v("instanceof")]),t._v(" 判断，熔断对应的异常类型正是 "),a("strong",[t._v("DegradeException")]),t._v(" 。")])])}),[],!1,null,null,null);s.default=e.exports}}]);