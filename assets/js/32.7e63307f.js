(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{502:function(t,s,a){"use strict";a.r(s);var e=a(62),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"dockerfile-制作-spring-boot-项目镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-制作-spring-boot-项目镜像"}},[t._v("#")]),t._v(" Dockerfile 制作 Spring Boot 项目镜像")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Dockerfile")]),t._v(" "),a("div",{staticClass:"language-Dockerfile extra-class"},[a("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[a("code",[a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" openjdk:8-jre-alpine")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 8080")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" JAVA_OPTS="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENV")]),t._v(" APP_OPTS="),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ARG")]),t._v(" JAR_FILE")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COPY")]),t._v(" target/"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${JAR_FILE}")]),t._v(" app.jar")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token instruction"}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ENTRYPOINT")]),t._v(" exec java "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("${JAVA_OPTS}")]),t._v(" -Djava.security.egd=file:/dev/./urandom -jar /app.jar "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$APP_OPTS")])]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("docker-compose.yml")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("xxx-service")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $PWD/xxx       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 上下文路径，通常就是 Dockerfile 所在目录")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("dockerfile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Dockerfile\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("JAR_FILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx.jar     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 传给 Dockerfile 的参数，指定 jar 包名")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" xxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("service \n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("JAVA_OPTS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-Xms512m -Xmx512m"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("APP_OPTS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--server.port=4321 --spring.profiles.active=test"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("network_mode")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"host"')]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1")]),t._v("\n")])])])])]),t._v(" "),a("p",[t._v("上述的示例中利用到了很多 Dockerfile 的高级技巧才能妥善处理 spring boot 乃至 spring cloud 中所需要面对的麻烦。")]),t._v(" "),a("ul",[a("li",[t._v("利用 "),a("code",[t._v("host")]),t._v(" 模式的网络解决了微服务使用虚拟 IP 无法正确注册和调用的问题")]),t._v(" "),a("li",[t._v("利用 "),a("code",[t._v("APP_OPTS")]),t._v(" 环境变量指定 "),a("code",[t._v("server.port")]),t._v(" 解决了硬编码 "),a("code",[t._v("EXPOSE 8080")]),t._v(" 在一台宿主机上无法启动多个实例问题")]),t._v(" "),a("li",[t._v("利用 "),a("code",[t._v("exec")]),t._v(" 解决了 PID=1 的问题。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);