(window.webpackJsonp=window.webpackJsonp||[]).push([[177],{636:function(a,t,i){"use strict";i.r(t);var e=i(62),s=Object(e.a)({},(function(){var a=this,t=a.$createElement,i=a._self._c||t;return i("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[i("h1",{attrs:{id:"每一个开发人员都应该懂的-uml-规范"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#每一个开发人员都应该懂的-uml-规范"}},[a._v("#")]),a._v(" 每一个开发人员都应该懂的 UML 规范")]),a._v(" "),i("p",[a._v("在团队协作过程中最常见的就是开会、开会最常用的就是图，而图中最常见的就是流程图、时序图、类图，这三个图可以清楚的描述你想解释的内容。学好类图不仅仅能帮助自己更清楚的梳理业务，还能提高开会效率。但是话说回来，你是否真的看懂别人画的图了？或者你真的会画吗？今天就和大家一起学习一下怎么画类图。")]),a._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/java/img/uml-01.jpg",alt:"uml-01.jpg"}})]),a._v(" "),i("p",[a._v("上图是我模拟出来的一个场景和大家具体说一下类图究竟应该怎么画才对。图中讲的是这样一个 “故事” ：")]),a._v(" "),i("ul",[i("li",[i("p",[a._v("一个公司下面有很多部门，公司和部门是不可分割的。")])]),a._v(" "),i("li",[i("p",[a._v("码农属于一个部门，但是如果部门解散了，码农依然是码农。")])]),a._v(" "),i("li",[i("p",[a._v("码农无时无刻在用手机，只有工作时间才会使用 Mac 。")])]),a._v(" "),i("li",[i("p",[a._v("Mac 是一种电脑，电脑是“可计算处理器”的一种实现。")])])]),a._v(" "),i("p",[a._v("下面我们就逐一介绍下这些关系。")]),a._v(" "),i("h2",{attrs:{id:"_1-泛化关系-generalization"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-泛化关系-generalization"}},[a._v("#")]),a._v(" 1. 泛化关系（generalization）")]),a._v(" "),i("p",[a._v("泛化关系为 "),i("strong",[a._v("is-a")]),a._v(" 的关系；两个对象之间如果可以用 "),i("strong",[a._v("is-a")]),a._v(" 来表示，就是泛化关系。")]),a._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/java/img/uml-02.jpg",alt:"uml-02.jpg"}})]),a._v(" "),i("p",[a._v("泛化关系用一条带空心箭头的直接表示。如图为例， Mac 和电脑就是泛化关系，通常在程序里面泛化表现为继承于非抽象类。")]),a._v(" "),i("h2",{attrs:{id:"_2-实现关系-realization"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_2-实现关系-realization"}},[a._v("#")]),a._v(" 2. 实现关系（realization）")]),a._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/java/img/uml-03.jpg",alt:"uml-03.jpg"}})]),a._v(" "),i("p",[a._v("实现关系用一条带实心箭头的虚线表示。如图为例，电脑和可计算处理器就是实现关系，通常程序里面实现关系表现为继承抽象类。比如我们平时写的 Readable 、Printable 等接口的实现。")]),a._v(" "),i("h2",{attrs:{id:"_3-聚合关系-aggregation"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_3-聚合关系-aggregation"}},[a._v("#")]),a._v(" 3. 聚合关系（aggregation）")]),a._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/java/img/uml-04.jpg",alt:"uml-04.jpg"}})]),a._v(" "),i("p",[a._v("聚合关系用一条带空心菱形箭头的直线表示，如图码农和部门就是聚合关系。与组合关系不同的是，整体和部分不是强依赖的，即使整体不存在了，部分仍然存在。如图为例， 部门撤销了，码农换一个工作还是码农嘛。")]),a._v(" "),i("h2",{attrs:{id:"_4-组合关系-composition"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-组合关系-composition"}},[a._v("#")]),a._v(" 4. 组合关系（composition）")]),a._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/java/img/uml-05.jpg",alt:"uml-05.jpg"}})]),a._v(" "),i("p",[a._v("组合关系用一条带实心菱形箭头直线表示，与聚合关系一样，组合关系同样表示整体由部分构成的关系，不同之处在于整体和部分是强依赖关系，如果整体不存在了，部分也不复存在。如图为例，如果公司倒闭了，那么何来部门呢？")]),a._v(" "),i("h2",{attrs:{id:"_5-关联关系-association"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_5-关联关系-association"}},[a._v("#")]),a._v(" 5. 关联关系（association）")]),a._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/java/img/uml-06.jpg",alt:"uml-06.jpg"}})]),a._v(" "),i("p",[a._v("关联关系通常用一条直线表示，当然如果需要标明方向可以添加箭头。它是描书不同的类对象之间的关系，通常不会随着状态的变化而变化，可以理解为被关联者属于关联者的一部分。如图为例，手机就是码农的一部分，不会因为他上班与否而变化所属关系。通常情况在程序里面以类变量的方式表现。")]),a._v(" "),i("h2",{attrs:{id:"_6-依赖关系-dependency"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_6-依赖关系-dependency"}},[a._v("#")]),a._v(" 6. 依赖关系（dependency）")]),a._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/java/img/uml-07.jpg",alt:"uml-07.jpg"}})]),a._v(" "),i("p",[a._v("依赖关系是用一套带箭头的虚线表示，他通常描述一个对象在运行期间会用到另一个对象的关系。如图为例码农只有在工作的时候才会用到 Mac 电脑，所以这种依赖关系是依赖于运行状态的。通常情况下是在程序里面通过构造函数、形参等体现。")]),a._v(" "),i("h2",{attrs:{id:"_7-回顾总结"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_7-回顾总结"}},[a._v("#")]),a._v(" 7. 回顾总结")]),a._v(" "),i("p",[a._v("到这里我们再次回顾一下开篇的图片是不是更加理解里面的连线了？所以我们在绘图过程中一定要非常注意这个线和箭。")]),a._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/java/img/uml-01.jpg",alt:"uml-01.jpg"}})]),a._v(" "),i("p",[a._v("不过话说回来，死记硬背这些东西确实很难，于是我自己想了一个打油诗，帮助自己来记忆，你也可以来试一下。")]),a._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[a._v("实箭泛化虚实现，虚线依赖实关联。\n\n空菱聚合实组合，项目沟通图常见。\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);