(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{593:function(t,a,i){"use strict";i.r(a);var s=i(62),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,i=t._self._c||a;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"git-的使用工作流"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#git-的使用工作流"}},[t._v("#")]),t._v(" Git 的使用工作流")]),t._v(" "),i("p",[t._v("Git 最大的优点同时也是它的最大的缺点：极具灵活性。这种灵活抬高了初学者的学习门槛。为此，有经验的程序员和大型机构结合软件开发的流程为 git 总结-提炼出了固定的使用方式，这中特定的使用顺序和方法被称为 "),i("strong",[t._v("工作流")]),t._v(" 。")]),t._v(" "),i("p",[t._v("Atlassian 公司推荐一种基于 "),i("strong",[t._v("git rebase")]),t._v(" 命令的 Git 工作流，这种工作流与 github 工作流的却别在于，『处理代码冲突』的工作从项目管理者转交到了代码提交者手里，项目提交者必须要保证自己的新代码与 master 分支合并后必须是无误的"),i("small",[t._v("（至少是不耽误 master 分支原有代码运行的）")]),t._v("，再发起 pull request 。")]),t._v(" "),i("h2",{attrs:{id:"_1-核心规则"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_1-核心规则"}},[t._v("#")]),t._v(" 1. 核心规则")]),t._v(" "),i("p",[t._v("这种基于 "),i("strong",[t._v("git rebase")]),t._v(" 的工作流核心准则只有 2 条：")]),t._v(" "),i("ul",[i("li",[i("p",[t._v("让你的本地的 master 和远程仓库的 master『在一起』；")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/git-flow-1.png",alt:"git-flow-1"}})]),t._v(" "),i("p",[t._v("如何让它俩在一起？")]),t._v(" "),i("ol",[i("li",[i("p",[t._v("切换到 master 分支")])]),t._v(" "),i("li",[i("p",[t._v("执行 git pull")])])])]),t._v(" "),i("li",[i("p",[t._v("让你的工作分支始终保证是『基于你的本地最新 master』的。")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/git-flow-2.png",alt:"git-flow-2"}})]),t._v(" "),i("p",[t._v("如何让工作分支基于最新的 master ？")]),t._v(" "),i("ol",[i("li",[i("p",[t._v("切换到工作分支")])]),t._v(" "),i("li",[i("p",[t._v("执行 git rebase")])])])])]),t._v(" "),i("p",[t._v("总而言之，上述两个规则总结起来就是一句话：")]),t._v(" "),i("p",[i("strong",[t._v("时刻保证你当前的工作分支是『基于』最新的 master 远程分支。")])]),t._v(" "),i("h2",{attrs:{id:"_2-工作流程"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_2-工作流程"}},[t._v("#")]),t._v(" 2. 工作流程")]),t._v(" "),i("p",[t._v("这种工作流的整体流程如下：")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("[1]. git clone 下载中央仓库的项目。\n\n[2]. 创建属于自己的分支。如何创建见后续。\n\n[3]. 等待项目经理安排任务。接受到项目经理安排的任务：实现某某功能，或修改某某 bug 。\n\nwhile (true) {\n\n    [4]. 是否满足核心准则一：本地 master 是否是最新的？\n    if (不是) {\n        a. 更新（本地）master 分支。如何更新见后续。\n    }\n\n    [5]. 是否满足核心准则二：本地 xxx 是否是『基于』最新的 master ？\n    if (不是) {\n        a. 本地 xxx 分支变基。如何变基见后续。\n    }\n\n    [6]. 判断是否完成了任务？\n    if (是) {\n        a. 更新（远程）xxx 分支。如何更新见后续。\n        b. 发起和并请求（pull request），并口头通知项目经理，希望他合并。\n        c. break，跳出循环\n    } \n    else if (否) {\n        a. 写 5 分钟代码，努力完成项目经理安排的任务。 \n    }\n\n}\n\n[7]. 回到上面第 [3] 步，再次等待项目经理安排新任务，开始新的工作周期。\n")])])]),i("ul",[i("li",[i("p",[t._v("如何创建自己的分支：")]),t._v(" "),i("ol",{attrs:{start:"0"}},[i("li",[i("p",[t._v("保证是在 master 分支上")])]),t._v(" "),i("li",[i("p",[t._v("通过 git branch 命令创建分支，分支名自定义。")])]),t._v(" "),i("li",[i("p",[t._v("创建成功后，此时你是在你自己 xxx 分支上的。")])])])]),t._v(" "),i("li",[i("p",[t._v("如何更新（远程）xxx 分支：")]),t._v(" "),i("ol",{attrs:{start:"0"}},[i("li",[i("p",[t._v("保证是在本地 xxx 分支上；")])]),t._v(" "),i("li",[i("p",[t._v("通过 git add 命令提交修改（至暂存区）")])]),t._v(" "),i("li",[i("p",[t._v("通过 git commit 命令提交修改（至本地仓库）")])]),t._v(" "),i("li",[i("p",[i("small",[t._v("可选操作：")]),t._v("通过 git rebase 命令"),i("small",[t._v("（的第二个功效）")]),t._v("压缩多个提交，优化提交记录。")])]),t._v(" "),i("li",[i("p",[t._v("通过 git push 命令推送"),i("small",[t._v("（上传）")]),t._v("本地 xxx 分支代码。")])])])]),t._v(" "),i("li",[i("p",[t._v("如何更新（本地）master 分支：")]),t._v(" "),i("ol",{attrs:{start:"0"}},[i("li",[i("p",[t._v("此时你大概率是在本地 master 分支之外，例如，是在 xxx 分支上；")])]),t._v(" "),i("li",[i("p",[t._v("执行 git stash 命令暂存工作空间中的修改；")])]),t._v(" "),i("li",[i("p",[t._v("执行 git checkout 切换到 master 分支；")])]),t._v(" "),i("li",[i("p",[t._v("执行 git pull 命令拉取"),i("small",[t._v("（下载）")]),t._v("远程 master 分支；")])]),t._v(" "),i("li",[i("p",[t._v("执行 git checkout 切换回你来时的分支，例如，xxx 分支；")])]),t._v(" "),i("li",[i("p",[t._v("执行 git pop 取出曾经暂存的工作空间中的修改。")])])])])]),t._v(" "),i("h2",{attrs:{id:"_3-正常的-不正常场景"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_3-正常的-不正常场景"}},[t._v("#")]),t._v(" 3. 正常的“不正常场景”")]),t._v(" "),i("p",[t._v("由于大家都是在向同一个中央仓库提交代码，因此，可能本来是 “正常” 的场景在你看来会无缘无故变成 “不正常” 的情况。")]),t._v(" "),i("p",[t._v("如果不是因为你的操作导致的，这些 “不正常” 的情况都是 “正常的不正常” ，是工作中的必然环节：")]),t._v(" "),i("ul",[i("li",[i("p",[t._v("正常的不正常场景一：本地 master 和中央仓库 master 不在一起")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/atlassian-flow-GitKraken-1.png",alt:"atlassian-flow-1.png"}})]),t._v(" "),i("p",[t._v("出现这种情况是因为你的同事的提交导致了中央仓库的版本的演进，而你的本地版本库还没有更新，所以就出现了上述情况。")]),t._v(" "),i("p",[t._v("对于这种情况，要解决很简单，对你的 master 分支执行 git pull 来更新你的本地仓库就行了：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/atlassian-flow-GitKraken-2.gif",alt:"atlassian-flow-2.gif"}})])]),t._v(" "),i("li",[i("p",[t._v("不正常场景二：本地开发分支不是基于最新的 master")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/atlassian-flow-GitKraken-3.png",alt:"atlassian-flow-3.png"}})]),t._v(" "),i("p",[t._v("出现这种情况和上一个场景有一定关系。本来你的开发分支是基于最新的 master ，但是由于中央仓库的 master 更新以后，你“当初的” 最新 master ，已经不再是 “最新” 了，因此就出现了上述情况。")]),t._v(" "),i("p",[t._v("对于这种情况，要解决也很简单，对你的开发分支执行 git rebase 变基就行了：")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/atlassian-flow-GitKraken-4.gif",alt:"atlassian-flow-4.gif"}})])])]),t._v(" "),i("h2",{attrs:{id:"_4-不正常的-不正常场景"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#_4-不正常的-不正常场景"}},[t._v("#")]),t._v(" 4. 不正常的“不正常场景”")]),t._v(" "),i("ul",[i("li",[i("p",[t._v("本地 master 要领先于中央仓库 master")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/atlassian-flow-GitKraken-5.png",alt:"atlassian-flow-5.png"}})])]),t._v(" "),i("li",[i("p",[t._v("开发分支不是基于最新的 master 就提交")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://hemiao3000.gitee.io/java-note-img/images/git/img/atlassian-flow-GitKraken-6.gif",alt:"atlassian-flow-6.gif"}})])])])])}),[],!1,null,null,null);a.default=e.exports}}]);