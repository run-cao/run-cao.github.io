(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{563:function(t,e,a){"use strict";a.r(e);var v=a(62),l=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("span",{staticClass:"title"},[t._v("jQuery 的原生替代")])]),t._v(" "),a("p",[t._v("从 2006 年 1 月 14 日，John 发布 jQuery 到如今，jQuery 正在一步步推出历史的舞台。BootStrap 的下一个版本（v5）的目标就是移除它对 jQuery 的依赖，以原生的 JavaScript API 替代。")]),t._v(" "),a("p",[t._v("大家使用 jQuery 的目的有两个:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("首要目的：解决 JavaScript 代码跨平台的问题；")])]),t._v(" "),a("li",[a("p",[t._v("次要目的：简化 JavaScript 代码。")])])]),t._v(" "),a("p",[t._v("随着浏览器大战的逐渐落幕，浏览器兼容性问题现在慢慢变得不是问题，除非你的项目必须要兼容上古浏览器"),a("small",[t._v("（例如，IE 8）")]),t._v("，否则，现有的现代化的浏览器都很守规矩，标新立异、特立独行的特性越来越少。")]),t._v(" "),a("p",[t._v("在没有跨平台兼容的需求下，单纯因为简化 JavaScript 代码而引入 jQuery 显得不是很值得，因为原生的 JavaScript API 代码随着发展也变得越来越友好、简洁。")]),t._v(" "),a("p",[t._v("而且随着前端工程化的发展，更多的项目都会选择更进一步地使用前端三大框架，而不仅仅局限于一个库。")]),t._v(" "),a("h2",{attrs:{id:"元素获取"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#元素获取"}},[t._v("#")]),t._v(" 元素获取")]),t._v(" "),a("ul",[a("li",[t._v("document.getElementById、")]),t._v(" "),a("li",[t._v("document.getElementsByClassName 或")]),t._v(" "),a("li",[t._v("document.getElementsByTagName。")])]),t._v(" "),a("p",[t._v("https://www.cnblogs.com/moqiutao/p/9991678.html")])])}),[],!1,null,null,null);e.default=l.exports}}]);